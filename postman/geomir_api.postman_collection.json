{
	"info": {
		"_postman_id": "63774a26-d8f1-446b-b495-7250ade653cb",
		"name": "GeoMir Laravel API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "19399681"
	},
	"item": [
		{
			"name": "Token",
			"item": [
				{
					"name": "Register",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status OK\", function () {",
									"    pm.response.to.be.ok;",
									"})",
									"",
									"pm.test(\"JSON response\", function () {",
									"    pm.response.to.be.json;",
									"    pm.response.to.be.an(\"object\");",
									"    pm.response.to.have.jsonBody(\"success\");",
									"    pm.response.to.have.jsonBody(\"authToken\");",
									"    pm.response.to.have.jsonBody(\"tokenType\");",
									"    pm.response.to.not.have.jsonBody(\"error\");",
									"});",
									"",
									"pm.test(\"JSON response: success\", function () {",
									"    var jsonResponse = pm.response.json();",
									"    pm.expect(jsonResponse.success).to.be.a(\"boolean\");",
									"    pm.expect(jsonResponse.success).to.eql(true);",
									"});",
									"",
									"pm.test(\"JSON response: authToken\", function () {",
									"    var jsonResponse = pm.response.json();",
									"    pm.expect(jsonResponse.authToken).to.be.a(\"string\");",
									"    // Store last token to test other web services",
									"    pm.environment.set(\"email\", pm.request.body.formdata.get(\"email\"));",
									"    pm.environment.set(\"password\", pm.request.body.formdata.get(\"password\"));",
									"    // Store last token to test other web services",
									"    pm.collectionVariables.set(\"token\", jsonResponse.authToken);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "test_{{$timestamp}}",
									"type": "text"
								},
								{
									"key": "email",
									"value": "test_{{$timestamp}}@xtec.cat",
									"type": "text"
								},
								{
									"key": "password",
									"value": "{{$randomPassword}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{URL_ENDPOINT}}/api/register",
							"host": [
								"{{URL_ENDPOINT}}"
							],
							"path": [
								"api",
								"register"
							]
						}
					},
					"response": [
						{
							"name": "Register",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"test_{{$timestamp}}\",\n    \"email\": \"test_{{$timestamp}}@xtec.cat\",\n    \"password\": \"{{$randomPassword}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL_ENDPOINT}}/api/register",
									"host": [
										"{{URL_ENDPOINT}}"
									],
									"path": [
										"api",
										"register"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Wed, 28 Feb 2024 16:58:40 GMT"
								},
								{
									"key": "Server",
									"value": "Apache/2.4.52 (Ubuntu)"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "60"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "58"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5, max=100"
								},
								{
									"key": "Connection",
									"value": "Keep-Alive"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"authToken\": \"152|9lWEkNBDe4kUsAESspDEvp9X6QHxdSn03uUgrUsx17973060\",\n    \"tokenType\": \"Bearer\"\n}"
						}
					]
				},
				{
					"name": "Register INVALID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status 422\", function () {",
									"    pm.response.to.have.status(422)",
									"})",
									"",
									"pm.test(\"JSON response\", function () {",
									"    pm.response.to.be.json;",
									"    pm.response.to.be.an(\"object\");",
									"    pm.response.to.have.jsonBody(\"message\");",
									"    pm.response.to.have.jsonBody(\"errors\");",
									"});",
									"",
									"pm.test(\"JSON response: message\", function () {",
									"    var jsonResponse = pm.response.json();",
									"    pm.expect(jsonResponse.message).to.be.a(\"string\");",
									"});",
									"",
									"pm.test(\"JSON response: errors\", function () {",
									"    var jsonResponse = pm.response.json();",
									"    pm.expect(jsonResponse.errors).to.be.a(\"object\");",
									"    pm.expect(jsonResponse.errors).to.have.key(\"email\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"test_{{$timestamp}}\",\n    \"password\": \"{{$randomPassword}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_ENDPOINT}}/api/register",
							"host": [
								"{{URL_ENDPOINT}}"
							],
							"path": [
								"api",
								"register"
							]
						}
					},
					"response": [
						{
							"name": "Register INVALID",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"test_{{$timestamp}}\",\n    \"password\": \"{{$randomPassword}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL_ENDPOINT}}/api/register",
									"host": [
										"{{URL_ENDPOINT}}"
									],
									"path": [
										"api",
										"register"
									]
								}
							},
							"status": "Unprocessable Content",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 27 Feb 2024 19:17:12 GMT"
								},
								{
									"key": "Server",
									"value": "Apache/2.4.52 (Ubuntu)"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "60"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "47"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5, max=100"
								},
								{
									"key": "Connection",
									"value": "Keep-Alive"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The email field is required.\",\n    \"errors\": {\n        \"email\": [\n            \"The email field is required.\"\n        ]\n    }\n}"
						}
					]
				},
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status OK\", function () {",
									"    pm.response.to.be.ok;",
									"})",
									"",
									"pm.test(\"JSON response\", function () {",
									"    pm.response.to.be.json;",
									"    pm.response.to.be.an(\"object\");",
									"    pm.response.to.have.jsonBody(\"success\");",
									"    pm.response.to.have.jsonBody(\"authToken\");",
									"    pm.response.to.have.jsonBody(\"tokenType\");",
									"    pm.response.to.not.have.jsonBody(\"error\");",
									"});",
									"",
									"pm.test(\"JSON response: success\", function () {",
									"    var jsonResponse = pm.response.json();",
									"    pm.expect(jsonResponse.success).to.be.a(\"boolean\");",
									"    pm.expect(jsonResponse.success).to.eql(true);",
									"});",
									"",
									"pm.test(\"JSON response: authToken\", function () {",
									"    var jsonResponse = pm.response.json();",
									"    pm.expect(jsonResponse.authToken).to.be.a(\"string\");",
									"    // Store last token to test other web services",
									"    pm.collectionVariables.set(\"token\", jsonResponse.authToken);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"{{email}}\",\n    \"password\": \"{{password}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_ENDPOINT}}/api/login",
							"host": [
								"{{URL_ENDPOINT}}"
							],
							"path": [
								"api",
								"login"
							]
						}
					},
					"response": [
						{
							"name": "Login",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"{{email}}\",\n    \"password\": \"{{password}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL_ENDPOINT}}/api/login",
									"host": [
										"{{URL_ENDPOINT}}"
									],
									"path": [
										"api",
										"login"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Wed, 28 Feb 2024 16:59:44 GMT"
								},
								{
									"key": "Server",
									"value": "Apache/2.4.52 (Ubuntu)"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "60"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "57"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5, max=100"
								},
								{
									"key": "Connection",
									"value": "Keep-Alive"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"authToken\": \"156|xBGLUr4ZxQH2PWqxYANsOKZ3NvmD9gt4CWGsM1AYd23fe99a\",\n    \"tokenType\": \"Bearer\"\n}"
						}
					]
				},
				{
					"name": "Login INVALID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status Unauthorized\", function () {",
									"    pm.response.to.be.unauthorized;",
									"})",
									"",
									"pm.test(\"JSON response\", function () {",
									"    pm.response.to.be.json;",
									"    pm.response.to.be.an(\"object\");",
									"    pm.response.to.have.jsonBody(\"success\");",
									"    pm.response.to.have.jsonBody(\"message\");",
									"});",
									"",
									"pm.test(\"JSON response: success\", function () {",
									"    var jsonResponse = pm.response.json();",
									"    pm.expect(jsonResponse.success).to.be.a(\"boolean\");",
									"    pm.expect(jsonResponse.success).to.eql(false);",
									"});",
									"",
									"pm.test(\"JSON response: message\", function () {",
									"    var jsonResponse = pm.response.json();",
									"    pm.expect(jsonResponse.message).to.be.a(\"string\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"{{email}}\",\n    \"password\": \"{{password}}_WRONG\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_ENDPOINT}}/api/login",
							"host": [
								"{{URL_ENDPOINT}}"
							],
							"path": [
								"api",
								"login"
							]
						}
					},
					"response": [
						{
							"name": "Login INVALID",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"{{email}}\",\n    \"password\": \"{{password}}_WRONG\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL_ENDPOINT}}/api/login",
									"host": [
										"{{URL_ENDPOINT}}"
									],
									"path": [
										"api",
										"login"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Wed, 28 Feb 2024 09:23:39 GMT"
								},
								{
									"key": "Server",
									"value": "Apache/2.4.52 (Ubuntu)"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "60"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "59"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5, max=100"
								},
								{
									"key": "Connection",
									"value": "Keep-Alive"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"message\": \"Invalid login credentials\"\n}"
						}
					]
				},
				{
					"name": "User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status OK\", function () {",
									"    pm.response.to.be.ok;",
									"})",
									"",
									"pm.test(\"JSON response\", function () {",
									"    pm.response.to.be.json;",
									"    pm.response.to.be.an(\"object\");",
									"    pm.response.to.have.jsonBody(\"user\");",
									"    pm.response.to.have.jsonBody(\"roles\");",
									"    pm.response.to.not.have.jsonBody(\"error\");",
									"});",
									"",
									"pm.test(\"JSON response: success\", function () {",
									"    var jsonResponse = pm.response.json();",
									"    pm.expect(jsonResponse.success).to.be.a(\"boolean\");",
									"    pm.expect(jsonResponse.success).to.eql(true);",
									"});",
									"",
									"pm.test(\"JSON response: user\", function () {",
									"    var jsonResponse = pm.response.json();",
									"    pm.expect(jsonResponse.user).to.be.an(\"object\");",
									"    pm.expect(jsonResponse.user).to.have.all.keys(\"id\",\"name\",\"email\", \"created_at\", \"updated_at\");",
									"});",
									"",
									"pm.test(\"JSON response: roles\", function () {",
									"    var jsonResponse = pm.response.json();",
									"    pm.expect(jsonResponse.roles).to.be.an(\"array\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL_ENDPOINT}}/api/user",
							"host": [
								"{{URL_ENDPOINT}}"
							],
							"path": [
								"api",
								"user"
							]
						}
					},
					"response": [
						{
							"name": "User",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL_ENDPOINT}}/api/user",
									"host": [
										"{{URL_ENDPOINT}}"
									],
									"path": [
										"api",
										"user"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Host",
									"value": "127.0.0.1:8000"
								},
								{
									"key": "Date",
									"value": "Thu, 08 Dec 2022 18:58:56 GMT"
								},
								{
									"key": "Date",
									"value": "Thu, 08 Dec 2022 18:58:56 GMT"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.1.11"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "60"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "59"
								},
								{
									"key": "phpdebugbar-id",
									"value": "X70a6934a5b7dd306fdd44f78caaeff7a"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"user\": {\n        \"id\": 173,\n        \"name\": \"pep.jimenez\",\n        \"email\": \"pep.jimenez@insjoaquimmir.cat\",\n        \"created_at\": \"2022-12-07T16:14:39.000000Z\",\n        \"updated_at\": \"2022-12-07T16:14:39.000000Z\"\n    },\n    \"roles\": [\n        \"author\"\n    ]\n}"
						}
					]
				},
				{
					"name": "User UNAUTHENTICATED",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status Unauthorized\", function () {",
									"    pm.response.to.be.unauthorized;",
									"})",
									"",
									"pm.test(\"JSON response\", function () {",
									"    pm.response.to.be.json;",
									"    pm.response.to.be.an(\"object\");",
									"    pm.response.to.have.jsonBody(\"message\");",
									"});",
									"",
									"pm.test(\"JSON response: message\", function () {",
									"    var jsonResponse = pm.response.json();",
									"    pm.expect(jsonResponse.message).to.be.a(\"string\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL_ENDPOINT}}/api/user",
							"host": [
								"{{URL_ENDPOINT}}"
							],
							"path": [
								"api",
								"user"
							]
						}
					},
					"response": [
						{
							"name": "User UNAUTHORIZED",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL_ENDPOINT}}/api/user",
									"host": [
										"{{URL_ENDPOINT}}"
									],
									"path": [
										"api",
										"user"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Wed, 28 Feb 2024 09:25:24 GMT"
								},
								{
									"key": "Server",
									"value": "Apache/2.4.52 (Ubuntu)"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5, max=100"
								},
								{
									"key": "Connection",
									"value": "Keep-Alive"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Unauthenticated.\"\n}"
						}
					]
				}
			],
			"auth": {
				"type": "noauth"
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Files",
			"item": [
				{
					"name": "Create file",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status 201\", function () {",
									"    pm.response.to.be.success;",
									"    pm.response.to.have.status(201)",
									"})",
									"",
									"pm.test(\"JSON response\", function () {",
									"    pm.response.to.be.json;",
									"    pm.response.to.be.an(\"object\");",
									"    pm.response.to.have.jsonBody(\"success\");",
									"    pm.response.to.have.jsonBody(\"data\");",
									"    pm.response.to.not.have.jsonBody(\"error\");",
									"});",
									"",
									"pm.test(\"JSON response: success\", function () {",
									"    var jsonResponse = pm.response.json();",
									"    pm.expect(jsonResponse.success).to.be.a(\"boolean\");",
									"    pm.expect(jsonResponse.success).to.eql(true);",
									"});",
									"",
									"pm.test(\"JSON response: data\", function () {",
									"    var jsonResponse = pm.response.json();",
									"    pm.expect(jsonResponse.data).to.be.a(\"object\");",
									"    pm.expect(jsonResponse.data).to.have.all.keys(\"id\",\"filepath\",\"filesize\", \"created_at\", \"updated_at\");",
									"    // Store last id to test other web services",
									"    pm.collectionVariables.set(\"file\", jsonResponse.data.id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "upload",
									"type": "file",
									"src": "/home/pep/Imatges/Captura de pantalla de 2024-02-27 20-47-47.png"
								},
								{
									"key": "",
									"type": "file",
									"src": [],
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "{{URL_ENDPOINT}}/api/files",
							"host": [
								"{{URL_ENDPOINT}}"
							],
							"path": [
								"api",
								"files"
							]
						}
					},
					"response": [
						{
							"name": "Create file",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "upload",
											"type": "file",
											"src": "/home/pepe/Imatges/03_28.png"
										},
										{
											"key": "",
											"type": "file",
											"src": [],
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{URL_ENDPOINT}}/api/files/",
									"host": [
										"{{URL_ENDPOINT}}"
									],
									"path": [
										"api",
										"files",
										""
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Host",
									"value": "127.0.0.1:8000"
								},
								{
									"key": "Date",
									"value": "Thu, 08 Dec 2022 19:01:37 GMT"
								},
								{
									"key": "Date",
									"value": "Thu, 08 Dec 2022 19:01:37 GMT"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.1.11"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "60"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "59"
								},
								{
									"key": "phpdebugbar-id",
									"value": "X71f9c6f982aeea8e39f38c515b8f9e55"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"data\": {\n        \"filepath\": \"uploads/1670526096_03_28.png\",\n        \"filesize\": 110429,\n        \"updated_at\": \"2022-12-08T19:01:36.000000Z\",\n        \"created_at\": \"2022-12-08T19:01:36.000000Z\",\n        \"id\": 8\n    }\n}"
						}
					]
				},
				{
					"name": "Create file INVALID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status 422\", function () {",
									"    pm.response.to.have.status(422)",
									"})",
									"",
									"pm.test(\"JSON response\", function () {",
									"    pm.response.to.be.json;",
									"    pm.response.to.be.an(\"object\");",
									"    pm.response.to.have.jsonBody(\"message\");",
									"    pm.response.to.have.jsonBody(\"errors\");",
									"});",
									"",
									"pm.test(\"JSON response: message\", function () {",
									"    var jsonResponse = pm.response.json();",
									"    pm.expect(jsonResponse.message).to.be.a(\"string\");",
									"});",
									"",
									"pm.test(\"JSON response: errors\", function () {",
									"    var jsonResponse = pm.response.json();",
									"    pm.expect(jsonResponse.errors).to.be.a(\"object\");",
									"    pm.expect(jsonResponse.errors).to.have.key(\"upload\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "upload",
									"type": "file",
									"src": "/home/pep/Imatges/Captura de pantalla de 2024-02-27 20-47-47.png",
									"disabled": true
								},
								{
									"key": "",
									"type": "file",
									"src": [],
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "{{URL_ENDPOINT}}/api/files",
							"host": [
								"{{URL_ENDPOINT}}"
							],
							"path": [
								"api",
								"files"
							]
						}
					},
					"response": [
						{
							"name": "Create file INVALID",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "upload",
											"type": "file",
											"src": "/home/pepe/Imatges/25146.png"
										},
										{
											"key": "",
											"type": "file",
											"src": [],
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{URL_ENDPOINT}}/api/files/",
									"host": [
										"{{URL_ENDPOINT}}"
									],
									"path": [
										"api",
										"files",
										""
									]
								}
							},
							"status": "Unprocessable Content",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Host",
									"value": "127.0.0.1:8000"
								},
								{
									"key": "Date",
									"value": "Thu, 08 Dec 2022 19:01:19 GMT"
								},
								{
									"key": "Date",
									"value": "Thu, 08 Dec 2022 19:01:19 GMT"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.1.11"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "60"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "57"
								},
								{
									"key": "phpdebugbar-id",
									"value": "X8000135eb714af6d2913ebf6625814e6"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The upload field is required.\",\n    \"errors\": {\n        \"upload\": [\n            \"The upload field is required.\"\n        ]\n    }\n}"
						}
					]
				},
				{
					"name": "List files",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const dataSchema = {",
									"    \"type\": \"array\",",
									"    \"items\": [{",
									"        \"type\": \"object\",",
									"        \"properties\":{",
									"            \"id\": {",
									"                \"type\":\"integer\"",
									"            },",
									"            \"filepath\": {",
									"                \"type\":\"string\"",
									"            },",
									"            \"filesize\": {",
									"                \"type\":\"integer\"",
									"            },",
									"            \"created_at\": {",
									"                \"type\":\"string\"",
									"            },",
									"            \"updated_at\": {",
									"                \"type\":\"string\"",
									"            }",
									"        },",
									"        \"required\": [",
									"            \"id\",",
									"            \"filepath\",",
									"            \"filesize\"",
									"        ]",
									"    }]",
									"};",
									"",
									"pm.test(\"Status OK\", function () {",
									"    pm.response.to.be.ok;",
									"})",
									"",
									"pm.test(\"JSON response\", function () {",
									"    pm.response.to.be.json;",
									"    pm.response.to.be.an(\"object\");",
									"    pm.response.to.have.jsonBody(\"success\");",
									"    pm.response.to.have.jsonBody(\"data\");",
									"    pm.response.to.not.have.jsonBody(\"error\");",
									"});",
									"",
									"pm.test(\"JSON response: success\", function () {",
									"    var jsonResponse = pm.response.json();",
									"    pm.expect(jsonResponse.success).to.be.a(\"boolean\");",
									"    pm.expect(jsonResponse.success).to.eql(true);",
									"});",
									"",
									"pm.test(\"JSON response: data\", function () {",
									"    var jsonResponse = pm.response.json();",
									"    pm.expect(jsonResponse.data).to.be.an(\"array\");",
									"    pm.expect(tv4.validate(jsonResponse.data, dataSchema)).to.be.true;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL_ENDPOINT}}/api/files",
							"host": [
								"{{URL_ENDPOINT}}"
							],
							"path": [
								"api",
								"files"
							]
						}
					},
					"response": [
						{
							"name": "List files",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL_ENDPOINT}}/api/files",
									"host": [
										"{{URL_ENDPOINT}}"
									],
									"path": [
										"api",
										"files"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Host",
									"value": "127.0.0.1:8000"
								},
								{
									"key": "Date",
									"value": "Thu, 08 Dec 2022 19:01:11 GMT"
								},
								{
									"key": "Date",
									"value": "Thu, 08 Dec 2022 19:01:11 GMT"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.1.11"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "60"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "58"
								},
								{
									"key": "phpdebugbar-id",
									"value": "X0cf39a43f2e30871fa1165f9decca6de"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"data\": [\n        {\n            \"id\": 1,\n            \"filepath\": \"uploads/1670426521_1280px-Scrum_process.svg.png\",\n            \"filesize\": 76171,\n            \"created_at\": \"2022-12-07T14:42:14.000000Z\",\n            \"updated_at\": \"2022-12-07T15:22:01.000000Z\"\n        },\n        {\n            \"id\": 2,\n            \"filepath\": \"uploads/1670439345_30-apr-2013-92.jpg\",\n            \"filesize\": 167837,\n            \"created_at\": \"2022-12-07T16:16:01.000000Z\",\n            \"updated_at\": \"2022-12-07T18:55:45.000000Z\"\n        },\n        {\n            \"id\": 4,\n            \"filepath\": \"uploads/1670438620_25146.png\",\n            \"filesize\": 89888,\n            \"created_at\": \"2022-12-07T18:43:40.000000Z\",\n            \"updated_at\": \"2022-12-07T18:43:40.000000Z\"\n        },\n        {\n            \"id\": 5,\n            \"filepath\": \"uploads/1670438714_25146.png\",\n            \"filesize\": 89888,\n            \"created_at\": \"2022-12-07T18:45:14.000000Z\",\n            \"updated_at\": \"2022-12-07T18:45:14.000000Z\"\n        },\n        {\n            \"id\": 6,\n            \"filepath\": \"uploads/1670438761_30-apr-2013-92.jpg\",\n            \"filesize\": 167837,\n            \"created_at\": \"2022-12-07T18:46:01.000000Z\",\n            \"updated_at\": \"2022-12-07T18:46:01.000000Z\"\n        },\n        {\n            \"id\": 7,\n            \"filepath\": \"uploads/1670439559_15m-love.png\",\n            \"filesize\": 271691,\n            \"created_at\": \"2022-12-07T18:59:19.000000Z\",\n            \"updated_at\": \"2022-12-07T18:59:19.000000Z\"\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Read file",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status OK\", function () {",
									"    pm.response.to.be.ok;",
									"})",
									"",
									"pm.test(\"JSON response\", function () {",
									"    pm.response.to.be.json;",
									"    pm.response.to.be.an(\"object\");",
									"    pm.response.to.have.jsonBody(\"success\");",
									"    pm.response.to.have.jsonBody(\"data\");",
									"    pm.response.to.not.have.jsonBody(\"error\");",
									"});",
									"",
									"pm.test(\"JSON response: success\", function () {",
									"    var jsonResponse = pm.response.json();",
									"    pm.expect(jsonResponse.success).to.be.a(\"boolean\");",
									"    pm.expect(jsonResponse.success).to.eql(true);",
									"});",
									"",
									"pm.test(\"JSON response: data\", function () {",
									"    var jsonResponse = pm.response.json();",
									"    pm.expect(jsonResponse.data).to.be.a(\"object\");",
									"    pm.expect(jsonResponse.data).to.have.all.keys(\"id\",\"filepath\",\"filesize\", \"created_at\", \"updated_at\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL_ENDPOINT}}/api/files/{{file}}",
							"host": [
								"{{URL_ENDPOINT}}"
							],
							"path": [
								"api",
								"files",
								"{{file}}"
							]
						}
					},
					"response": [
						{
							"name": "Read file",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL_ENDPOINT}}/api/files/{{file}}",
									"host": [
										"{{URL_ENDPOINT}}"
									],
									"path": [
										"api",
										"files",
										"{{file}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Host",
									"value": "127.0.0.1:8000"
								},
								{
									"key": "Date",
									"value": "Thu, 08 Dec 2022 19:02:21 GMT"
								},
								{
									"key": "Date",
									"value": "Thu, 08 Dec 2022 19:02:21 GMT"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.1.11"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "60"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "57"
								},
								{
									"key": "phpdebugbar-id",
									"value": "Xb0d5fec88b4f22cef7bceafc3647678f"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"data\": {\n        \"id\": 1,\n        \"filepath\": \"uploads/1670426521_1280px-Scrum_process.svg.png\",\n        \"filesize\": 76171,\n        \"created_at\": \"2022-12-07T14:42:14.000000Z\",\n        \"updated_at\": \"2022-12-07T15:22:01.000000Z\"\n    }\n}"
						}
					]
				},
				{
					"name": "Read file NOT FOUND",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status 404\", function () {",
									"    pm.response.to.be.notFound;",
									"})",
									"",
									"pm.test(\"JSON response\", function () {",
									"    pm.response.to.be.json;",
									"    pm.response.to.be.an(\"object\");",
									"    pm.response.to.have.jsonBody(\"success\");",
									"    pm.response.to.have.jsonBody(\"message\");",
									"});",
									"",
									"pm.test(\"JSON response: success\", function () {",
									"    var jsonResponse = pm.response.json();",
									"    pm.expect(jsonResponse.success).to.be.a(\"boolean\");",
									"    pm.expect(jsonResponse.success).to.eql(false);",
									"});",
									"",
									"pm.test(\"JSON response: message\", function () {",
									"    var jsonResponse = pm.response.json();",
									"    pm.expect(jsonResponse.message).to.be.a(\"string\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL_ENDPOINT}}/api/files/{{NOT_EXISTS}}",
							"host": [
								"{{URL_ENDPOINT}}"
							],
							"path": [
								"api",
								"files",
								"{{NOT_EXISTS}}"
							]
						}
					},
					"response": [
						{
							"name": "Read file NOT FOUND",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL_ENDPOINT}}/api/files/{{file}}",
									"host": [
										"{{URL_ENDPOINT}}"
									],
									"path": [
										"api",
										"files",
										"{{file}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Host",
									"value": "127.0.0.1:8000"
								},
								{
									"key": "Date",
									"value": "Thu, 08 Dec 2022 19:02:03 GMT"
								},
								{
									"key": "Date",
									"value": "Thu, 08 Dec 2022 19:02:03 GMT"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.1.11"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "60"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "58"
								},
								{
									"key": "phpdebugbar-id",
									"value": "Xdb092aef0102c1dc2ba317200502205f"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"message\": \"File not found\"\n}"
						}
					]
				},
				{
					"name": "Update file",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status OK\", function () {",
									"    pm.response.to.be.ok;",
									"})",
									"",
									"pm.test(\"JSON response\", function () {",
									"    pm.response.to.be.json;",
									"    pm.response.to.be.an(\"object\");",
									"    pm.response.to.have.jsonBody(\"success\");",
									"    pm.response.to.have.jsonBody(\"data\");",
									"    pm.response.to.not.have.jsonBody(\"error\");",
									"});",
									"",
									"pm.test(\"JSON response: success\", function () {",
									"    var jsonResponse = pm.response.json();",
									"    pm.expect(jsonResponse.success).to.be.a(\"boolean\");",
									"    pm.expect(jsonResponse.success).to.eql(true);",
									"});",
									"",
									"pm.test(\"JSON response: data\", function () {",
									"    var jsonResponse = pm.response.json();",
									"    pm.expect(jsonResponse.data).to.be.a(\"object\");",
									"    pm.expect(jsonResponse.data).to.have.all.keys(\"id\", \"filepath\", \"filesize\", \"created_at\", \"updated_at\");",
									"});",
									"",
									"pm.test(\"JSON response: data updated\", function () {",
									"    var jsonResponseData = pm.response.json().data;",
									"    pm.expect(jsonResponseData.filepath).contains(pm.request.body.formdata.get('upload'))",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "upload",
									"type": "file",
									"src": "/home/pep/Imatges/Captura de pantalla de 2024-02-27 08-57-36.png"
								},
								{
									"key": "method",
									"value": "PUT",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "{{URL_ENDPOINT}}/api/files/{{file}}",
							"host": [
								"{{URL_ENDPOINT}}"
							],
							"path": [
								"api",
								"files",
								"{{file}}"
							]
						}
					},
					"response": [
						{
							"name": "Update file",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "upload",
											"type": "file",
											"src": "/home/pepe/Imatges/30-apr-2013-92.jpg"
										},
										{
											"key": "method",
											"value": "PUT",
											"type": "text",
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{URL_ENDPOINT}}/api/files/{{file}}",
									"host": [
										"{{URL_ENDPOINT}}"
									],
									"path": [
										"api",
										"files",
										"{{file}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Host",
									"value": "127.0.0.1:8000"
								},
								{
									"key": "Date",
									"value": "Thu, 08 Dec 2022 19:02:53 GMT"
								},
								{
									"key": "Date",
									"value": "Thu, 08 Dec 2022 19:02:53 GMT"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.1.11"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "60"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "58"
								},
								{
									"key": "phpdebugbar-id",
									"value": "X6ea6f8d88780bd0f9a066abcb9abdbe7"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"data\": {\n        \"id\": 1,\n        \"filepath\": \"uploads/1670526173_30-apr-2013-92.jpg\",\n        \"filesize\": 167837,\n        \"created_at\": \"2022-12-07T14:42:14.000000Z\",\n        \"updated_at\": \"2022-12-08T19:02:53.000000Z\"\n    }\n}"
						}
					]
				},
				{
					"name": "Update file INVALID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status 422\", function () {",
									"    pm.response.to.have.status(422)",
									"})",
									"",
									"pm.test(\"JSON response\", function () {",
									"    pm.response.to.be.json;",
									"    pm.response.to.be.an(\"object\");",
									"    pm.response.to.have.jsonBody(\"message\");",
									"    pm.response.to.have.jsonBody(\"errors\");",
									"});",
									"",
									"pm.test(\"JSON response: message\", function () {",
									"    var jsonResponse = pm.response.json();",
									"    pm.expect(jsonResponse.message).to.be.a(\"string\");",
									"});",
									"",
									"pm.test(\"JSON response: errors\", function () {",
									"    var jsonResponse = pm.response.json();",
									"    pm.expect(jsonResponse.errors).to.be.a(\"object\");",
									"    pm.expect(jsonResponse.errors).to.have.key(\"upload\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "upload",
									"type": "file",
									"src": "/home/pep/Imatges/Captura de pantalla de 2024-02-27 08-57-36.png",
									"disabled": true
								},
								{
									"key": "method",
									"value": "PUT",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "{{URL_ENDPOINT}}/api/files/{{file}}",
							"host": [
								"{{URL_ENDPOINT}}"
							],
							"path": [
								"api",
								"files",
								"{{file}}"
							]
						}
					},
					"response": [
						{
							"name": "Update file INVALID",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "upload",
											"type": "file",
											"src": "/home/pep/Imatges/Captura de pantalla de 2024-02-27 08-57-36.png",
											"disabled": true
										},
										{
											"key": "method",
											"value": "PUT",
											"type": "text",
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{URL_ENDPOINT}}/api/files/{{file}}",
									"host": [
										"{{URL_ENDPOINT}}"
									],
									"path": [
										"api",
										"files",
										"{{file}}"
									]
								}
							},
							"status": "Unprocessable Content",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Wed, 28 Feb 2024 10:28:14 GMT"
								},
								{
									"key": "Server",
									"value": "Apache/2.4.52 (Ubuntu)"
								},
								{
									"key": "Vary",
									"value": "Authorization"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "60"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "59"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5, max=100"
								},
								{
									"key": "Connection",
									"value": "Keep-Alive"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The upload field is required.\",\n    \"errors\": {\n        \"upload\": [\n            \"The upload field is required.\"\n        ]\n    }\n}"
						}
					]
				},
				{
					"name": "Delete file",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status OK\", function () {",
									"    pm.response.to.be.ok;",
									"})",
									"",
									"pm.test(\"JSON response\", function () {",
									"    pm.response.to.be.json;",
									"    pm.response.to.be.an(\"object\");",
									"    pm.response.to.have.jsonBody(\"success\");",
									"    pm.response.to.have.jsonBody(\"data\");",
									"    pm.response.to.not.have.jsonBody(\"error\");",
									"});",
									"",
									"pm.test(\"JSON response: success\", function () {",
									"    var jsonResponse = pm.response.json();",
									"    pm.expect(jsonResponse.success).to.be.a(\"boolean\");",
									"    pm.expect(jsonResponse.success).to.eql(true);",
									"});",
									"",
									"pm.test(\"JSON response: data\", function () {",
									"    var jsonResponse = pm.response.json();",
									"    pm.expect(jsonResponse.data).to.be.a(\"object\");",
									"    pm.expect(jsonResponse.data).to.have.all.keys(\"id\", \"filepath\", \"filesize\", \"created_at\", \"updated_at\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "upload",
									"type": "file",
									"src": "/home/pepe/Imatges/25146.png"
								},
								{
									"key": "method",
									"value": "PUT",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "{{URL_ENDPOINT}}/api/files/{{file}}",
							"host": [
								"{{URL_ENDPOINT}}"
							],
							"path": [
								"api",
								"files",
								"{{file}}"
							]
						}
					},
					"response": [
						{
							"name": "Delete file",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "upload",
											"type": "file",
											"src": "/home/pepe/Imatges/25146.png"
										},
										{
											"key": "method",
											"value": "PUT",
											"type": "text",
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{URL_ENDPOINT}}/api/files/{{file}}",
									"host": [
										"{{URL_ENDPOINT}}"
									],
									"path": [
										"api",
										"files",
										"{{file}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Host",
									"value": "127.0.0.1:8000"
								},
								{
									"key": "Date",
									"value": "Thu, 08 Dec 2022 19:03:02 GMT"
								},
								{
									"key": "Date",
									"value": "Thu, 08 Dec 2022 19:03:02 GMT"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.1.11"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "60"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "57"
								},
								{
									"key": "phpdebugbar-id",
									"value": "X0ea51043ffb4865d344df1ad8c57efc4"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"data\": {\n        \"id\": 1,\n        \"filepath\": \"uploads/1670526173_30-apr-2013-92.jpg\",\n        \"filesize\": 167837,\n        \"created_at\": \"2022-12-07T14:42:14.000000Z\",\n        \"updated_at\": \"2022-12-08T19:02:53.000000Z\"\n    }\n}"
						}
					]
				},
				{
					"name": "Delete file NOT FOUND",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status 404\", function () {",
									"    pm.response.to.be.notFound;",
									"})",
									"",
									"pm.test(\"JSON response\", function () {",
									"    pm.response.to.be.json;",
									"    pm.response.to.be.an(\"object\");",
									"    pm.response.to.have.jsonBody(\"success\");",
									"    pm.response.to.have.jsonBody(\"message\");",
									"});",
									"",
									"pm.test(\"JSON response: success\", function () {",
									"    var jsonResponse = pm.response.json();",
									"    pm.expect(jsonResponse.success).to.be.a(\"boolean\");",
									"    pm.expect(jsonResponse.success).to.eql(false);",
									"});",
									"",
									"pm.test(\"JSON response: message\", function () {",
									"    var jsonResponse = pm.response.json();",
									"    pm.expect(jsonResponse.message).to.be.a(\"string\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "upload",
									"type": "file",
									"src": "/home/pepe/Imatges/25146.png"
								},
								{
									"key": "method",
									"value": "PUT",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "{{URL_ENDPOINT}}/api/files/{{file}}",
							"host": [
								"{{URL_ENDPOINT}}"
							],
							"path": [
								"api",
								"files",
								"{{file}}"
							]
						}
					},
					"response": [
						{
							"name": "Delete file NOT FOUND",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "upload",
											"type": "file",
											"src": "/home/pepe/Imatges/25146.png"
										},
										{
											"key": "method",
											"value": "PUT",
											"type": "text",
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{URL_ENDPOINT}}/api/files/{{NOT_EXISTS}}",
									"host": [
										"{{URL_ENDPOINT}}"
									],
									"path": [
										"api",
										"files",
										"{{NOT_EXISTS}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Wed, 28 Feb 2024 10:30:37 GMT"
								},
								{
									"key": "Server",
									"value": "Apache/2.4.52 (Ubuntu)"
								},
								{
									"key": "Vary",
									"value": "Authorization"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "60"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "59"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5, max=100"
								},
								{
									"key": "Connection",
									"value": "Keep-Alive"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"message\": \"File not found\"\n}"
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Posts",
			"item": [
				{
					"name": "CLRU Posts",
					"item": [
						{
							"name": "Create post",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status 201\", function () {",
											"    pm.response.to.be.success;",
											"    pm.response.to.have.status(201)",
											"})",
											"",
											"pm.test(\"JSON response\", function () {",
											"    pm.response.to.be.json;",
											"    pm.response.to.be.an(\"object\");",
											"    pm.response.to.have.jsonBody(\"success\");",
											"    pm.response.to.have.jsonBody(\"data\");",
											"    pm.response.to.not.have.jsonBody(\"error\");",
											"});",
											"",
											"pm.test(\"JSON response: success\", function () {",
											"    var jsonResponse = pm.response.json();",
											"    pm.expect(jsonResponse.success).to.be.a(\"boolean\");",
											"    pm.expect(jsonResponse.success).to.eql(true);",
											"});",
											"",
											"pm.test(\"JSON response: data\", function () {",
											"    var jsonResponse = pm.response.json();",
											"    pm.expect(jsonResponse.data).to.be.a(\"object\");",
											"    // Store last id to test other web services",
											"    pm.expect(jsonResponse.data).to.have.property(\"id\");",
											"    pm.collectionVariables.set(\"post\", jsonResponse.data.id);",
											"    // Data",
											"    pm.expect(jsonResponse.data).to.have.property(\"body\");",
											"    pm.expect(jsonResponse.data).to.have.property(\"latitude\");",
											"    pm.expect(jsonResponse.data).to.have.property(\"longitude\");",
											"    pm.expect(jsonResponse.data).to.have.property(\"created_at\");",
											"    pm.expect(jsonResponse.data).to.have.property(\"updated_at\");",
											"    // Relationships",
											"    pm.expect(jsonResponse.data).to.have.any.key(\"file\",\"file_id\");",
											"    pm.expect(jsonResponse.data).to.have.any.key(\"visibility\",\"visibility_id\");",
											"    pm.expect(jsonResponse.data).to.have.any.key(\"author\",\"author_id\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "body",
											"value": "Hola caracola",
											"type": "text"
										},
										{
											"key": "upload",
											"type": "file",
											"src": "/home/pep/Imatges/Captura de pantalla de 2023-01-24 19-07-33.png"
										},
										{
											"key": "latitude",
											"value": "1.887",
											"type": "text"
										},
										{
											"key": "longitude",
											"value": "0.444",
											"type": "text"
										},
										{
											"key": "visibility",
											"value": "1",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{URL_ENDPOINT}}/api/posts",
									"host": [
										"{{URL_ENDPOINT}}"
									],
									"path": [
										"api",
										"posts"
									]
								}
							},
							"response": [
								{
									"name": "Create post",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "body",
													"value": "Holaaaaaaaaaa",
													"type": "text"
												},
												{
													"key": "upload",
													"type": "file",
													"src": "/home/pepe/Imatges/1280px-Scrum_process.svg.png"
												},
												{
													"key": "latitude",
													"value": "1.887",
													"type": "text"
												},
												{
													"key": "longitude",
													"value": "0.444",
													"type": "text"
												},
												{
													"key": "visibility",
													"value": "1",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{URL_ENDPOINT}}/api/posts/",
											"host": [
												"{{URL_ENDPOINT}}"
											],
											"path": [
												"api",
												"posts",
												""
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Host",
											"value": "127.0.0.1:8000"
										},
										{
											"key": "Date",
											"value": "Thu, 08 Dec 2022 19:07:16 GMT"
										},
										{
											"key": "Date",
											"value": "Thu, 08 Dec 2022 19:07:16 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										},
										{
											"key": "X-Powered-By",
											"value": "PHP/8.1.11"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, private"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "60"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "57"
										},
										{
											"key": "phpdebugbar-id",
											"value": "Xe50f2d2800d4d93231ed43271e11f397"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"data\": {\n        \"id\": 4,\n        \"body\": \"Holaaaaaaaaaa\",\n        \"file\": {\n            \"id\": 9,\n            \"filepath\": \"uploads/1670526435_1280px-Scrum_process.svg.png\",\n            \"filesize\": 76171,\n            \"created_at\": \"2022-12-08T19:07:15.000000Z\",\n            \"updated_at\": \"2022-12-08T19:07:15.000000Z\"\n        },\n        \"latitude\": \"1.887\",\n        \"longitude\": \"0.444\",\n        \"visibility\": {\n            \"id\": 1,\n            \"name\": \"public\"\n        },\n        \"author\": {\n            \"id\": 173,\n            \"name\": \"pep.jimenez\",\n            \"email\": \"pep.jimenez@insjoaquimmir.cat\",\n            \"created_at\": \"2022-12-07T16:14:39.000000Z\",\n            \"updated_at\": \"2022-12-07T16:14:39.000000Z\"\n        },\n        \"created_at\": \"2022-12-08T19:07:16.000000Z\",\n        \"updated_at\": \"2022-12-08T19:07:16.000000Z\",\n        \"likes_count\": null\n    }\n}"
								}
							]
						},
						{
							"name": "Create post INVALID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status 422\", function () {",
											"    pm.response.to.have.status(422)",
											"})",
											"",
											"pm.test(\"JSON response\", function () {",
											"    pm.response.to.be.json;",
											"    pm.response.to.be.an(\"object\");",
											"    pm.response.to.have.jsonBody(\"message\");",
											"    pm.response.to.have.jsonBody(\"errors\");",
											"});",
											"",
											"pm.test(\"JSON response: message\", function () {",
											"    var jsonResponse = pm.response.json();",
											"    pm.expect(jsonResponse.message).to.be.a(\"string\");",
											"});",
											"",
											"pm.test(\"JSON response: errors\", function () {",
											"    var jsonResponse = pm.response.json();",
											"    pm.expect(jsonResponse.errors).to.be.a(\"object\");",
											"    pm.expect(jsonResponse.errors).to.have.keys(\"body\",\"upload\",\"latitude\",\"longitude\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "body",
											"value": "Hola caracola",
											"type": "text",
											"disabled": true
										},
										{
											"key": "upload",
											"type": "file",
											"src": "/home/pep/Imatges/Captura de pantalla de 2023-01-24 19-07-33.png",
											"disabled": true
										},
										{
											"key": "latitude",
											"value": "1.887",
											"type": "text",
											"disabled": true
										},
										{
											"key": "longitude",
											"value": "0.444",
											"type": "text",
											"disabled": true
										},
										{
											"key": "visibility",
											"value": "1",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{URL_ENDPOINT}}/api/posts",
									"host": [
										"{{URL_ENDPOINT}}"
									],
									"path": [
										"api",
										"posts"
									]
								}
							},
							"response": [
								{
									"name": "Create post INVALID",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "body",
													"value": "Hola caracola",
													"type": "text",
													"disabled": true
												},
												{
													"key": "upload",
													"type": "file",
													"src": "/home/pep/Imatges/Captura de pantalla de 2023-01-24 19-07-33.png",
													"disabled": true
												},
												{
													"key": "latitude",
													"value": "1.887",
													"type": "text",
													"disabled": true
												},
												{
													"key": "longitude",
													"value": "0.444",
													"type": "text",
													"disabled": true
												},
												{
													"key": "visibility",
													"value": "1",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{URL_ENDPOINT}}/api/posts",
											"host": [
												"{{URL_ENDPOINT}}"
											],
											"path": [
												"api",
												"posts"
											]
										}
									},
									"status": "Unprocessable Content",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Wed, 28 Feb 2024 11:28:48 GMT"
										},
										{
											"key": "Server",
											"value": "Apache/2.4.52 (Ubuntu)"
										},
										{
											"key": "Vary",
											"value": "Authorization"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, private"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "60"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "59"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5, max=100"
										},
										{
											"key": "Connection",
											"value": "Keep-Alive"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n    \"message\": \"The body field is required. (and 3 more errors)\",\n    \"errors\": {\n        \"body\": [\n            \"The body field is required.\"\n        ],\n        \"upload\": [\n            \"The upload field is required.\"\n        ],\n        \"latitude\": [\n            \"The latitude field is required.\"\n        ],\n        \"longitude\": [\n            \"The longitude field is required.\"\n        ]\n    }\n}"
								}
							]
						},
						{
							"name": "List posts",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const dataSchema = {",
											"    \"type\": \"array\",",
											"    \"items\": [{",
											"        \"type\": \"object\",",
											"        \"properties\":{",
											"            \"id\": {",
											"                \"type\":\"integer\"",
											"            },",
											"            \"body\": {",
											"                \"type\":\"string\"",
											"            },",
											"            \"file_id\": {",
											"                \"type\":\"integer\"",
											"            },",
											"            \"file\": {",
											"                \"type\":\"object\"",
											"            },",
											"            \"latitude\": {",
											"                \"type\":\"number\"",
											"            },",
											"            \"longitude\": {",
											"                \"type\":\"number\"",
											"            },",
											"            \"visibility_id\": {",
											"                \"type\":\"integer\"",
											"            },",
											"            \"visibility\": {",
											"                \"type\":\"object\"",
											"            },",
											"            \"author_id\": {",
											"                \"type\":\"integer\"",
											"            },",
											"            \"author\": {",
											"                \"type\":\"object\"",
											"            },                        ",
											"            \"created_at\": {",
											"                \"type\":\"string\"",
											"            },",
											"            \"updated_at\": {",
											"                \"type\":\"string\"",
											"            }",
											"        },",
											"        \"required\": [",
											"            \"id\",",
											"            \"body\",",
											"            \"latitude\",",
											"            \"longitude\"",
											"        ]",
											"    }]",
											"};",
											"",
											"pm.test(\"Status OK\", function () {",
											"    pm.response.to.be.ok;",
											"})",
											"",
											"pm.test(\"JSON response\", function () {",
											"    pm.response.to.be.json;",
											"    pm.response.to.be.an(\"object\");",
											"    pm.response.to.have.jsonBody(\"success\");",
											"    pm.response.to.have.jsonBody(\"data\");",
											"    pm.response.to.not.have.jsonBody(\"error\");",
											"});",
											"",
											"pm.test(\"JSON response: success\", function () {",
											"    var jsonResponse = pm.response.json();",
											"    pm.expect(jsonResponse.success).to.be.a(\"boolean\");",
											"    pm.expect(jsonResponse.success).to.eql(true);",
											"});",
											"",
											"pm.test(\"JSON response: data\", function () {",
											"    var jsonResponse = pm.response.json();",
											"    pm.expect(jsonResponse.data).to.be.an(\"array\");",
											"    pm.expect(tv4.validate(jsonResponse.data, dataSchema)).to.be.true;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL_ENDPOINT}}/api/posts",
									"host": [
										"{{URL_ENDPOINT}}"
									],
									"path": [
										"api",
										"posts"
									]
								}
							},
							"response": [
								{
									"name": "List posts",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{URL_ENDPOINT}}/api/posts",
											"host": [
												"{{URL_ENDPOINT}}"
											],
											"path": [
												"api",
												"posts"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Fri, 01 Mar 2024 11:58:56 GMT"
										},
										{
											"key": "Server",
											"value": "Apache/2.4.52 (Ubuntu)"
										},
										{
											"key": "Vary",
											"value": "Authorization"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, private"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "60"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "59"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5, max=100"
										},
										{
											"key": "Connection",
											"value": "Keep-Alive"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"data\": [\n        {\n            \"id\": 1,\n            \"body\": \"sasasasasas\",\n            \"file\": {\n                \"id\": 8,\n                \"filepath\": \"uploads/1709145847_Captura de pantalla de 2024-02-14 17-32-02.png\",\n                \"filesize\": 194910,\n                \"created_at\": \"2024-02-27T18:02:06.000000Z\",\n                \"updated_at\": \"2024-02-28T18:44:07.000000Z\"\n            },\n            \"latitude\": 222,\n            \"longitude\": 222,\n            \"visibility\": {\n                \"id\": 1,\n                \"name\": \"public\"\n            },\n            \"author\": {\n                \"id\": 7,\n                \"name\": \"Juan Perez\",\n                \"email\": \"algoar@fp.insjoaquimmir.cat\",\n                \"created_at\": \"2024-02-26T18:51:22.000000Z\",\n                \"updated_at\": \"2024-02-26T18:51:22.000000Z\"\n            },\n            \"created_at\": \"2024-02-27T18:02:06.000000Z\",\n            \"updated_at\": \"2024-02-28T18:44:07.000000Z\",\n            \"likes_count\": 0,\n            \"comments_count\": 1,\n            \"liked\": false,\n            \"commented\": false\n        },\n        {\n            \"id\": 2,\n            \"body\": \"Descripción\",\n            \"file\": {\n                \"id\": 13,\n                \"filepath\": \"uploads/1709117684_titulo.jpg\",\n                \"filesize\": 80805,\n                \"created_at\": \"2024-02-28T10:54:44.000000Z\",\n                \"updated_at\": \"2024-02-28T10:54:44.000000Z\"\n            },\n            \"latitude\": 41.21829,\n            \"longitude\": 1.71192,\n            \"visibility\": {\n                \"id\": 3,\n                \"name\": \"private\"\n            },\n            \"author\": {\n                \"id\": 7,\n                \"name\": \"Juan Perez\",\n                \"email\": \"algoar@fp.insjoaquimmir.cat\",\n                \"created_at\": \"2024-02-26T18:51:22.000000Z\",\n                \"updated_at\": \"2024-02-26T18:51:22.000000Z\"\n            },\n            \"created_at\": \"2024-02-28T10:54:44.000000Z\",\n            \"updated_at\": \"2024-02-28T10:54:44.000000Z\",\n            \"likes_count\": 1,\n            \"comments_count\": 1,\n            \"liked\": false,\n            \"commented\": false\n        },\n        {\n            \"id\": 3,\n            \"body\": \"Hola caracola\",\n            \"file\": {\n                \"id\": 15,\n                \"filepath\": \"uploads/1709118809_Captura de pantalla de 2023-01-24 19-07-33.png\",\n                \"filesize\": 68124,\n                \"created_at\": \"2024-02-28T11:13:29.000000Z\",\n                \"updated_at\": \"2024-02-28T11:13:29.000000Z\"\n            },\n            \"latitude\": 1.887,\n            \"longitude\": 0.444,\n            \"visibility\": {\n                \"id\": 1,\n                \"name\": \"public\"\n            },\n            \"author\": {\n                \"id\": 23,\n                \"name\": \"pep\",\n                \"email\": \"pep.castelltort@insjoaquimmir.cat\",\n                \"created_at\": \"2024-02-27T18:20:08.000000Z\",\n                \"updated_at\": \"2024-02-27T18:20:08.000000Z\"\n            },\n            \"created_at\": \"2024-02-28T11:13:29.000000Z\",\n            \"updated_at\": \"2024-02-28T11:13:29.000000Z\",\n            \"likes_count\": 1,\n            \"comments_count\": 0,\n            \"liked\": false,\n            \"commented\": false\n        },\n        {\n            \"id\": 4,\n            \"body\": \"Hola caracola\",\n            \"file\": {\n                \"id\": 16,\n                \"filepath\": \"uploads/1709118952_Captura de pantalla de 2023-01-24 19-07-33.png\",\n                \"filesize\": 68124,\n                \"created_at\": \"2024-02-28T11:15:52.000000Z\",\n                \"updated_at\": \"2024-02-28T11:15:52.000000Z\"\n            },\n            \"latitude\": 1.887,\n            \"longitude\": 0.444,\n            \"visibility\": {\n                \"id\": 1,\n                \"name\": \"public\"\n            },\n            \"author\": {\n                \"id\": 23,\n                \"name\": \"pep\",\n                \"email\": \"pep.castelltort@insjoaquimmir.cat\",\n                \"created_at\": \"2024-02-27T18:20:08.000000Z\",\n                \"updated_at\": \"2024-02-27T18:20:08.000000Z\"\n            },\n            \"created_at\": \"2024-02-28T11:15:52.000000Z\",\n            \"updated_at\": \"2024-02-28T11:15:52.000000Z\",\n            \"likes_count\": 1,\n            \"comments_count\": 0,\n            \"liked\": false,\n            \"commented\": false\n        },\n        {\n            \"id\": 5,\n            \"body\": \"Hola caracola\",\n            \"file\": {\n                \"id\": 17,\n                \"filepath\": \"uploads/1709119010_Captura de pantalla de 2023-01-24 19-07-33.png\",\n                \"filesize\": 68124,\n                \"created_at\": \"2024-02-28T11:16:50.000000Z\",\n                \"updated_at\": \"2024-02-28T11:16:50.000000Z\"\n            },\n            \"latitude\": 1.887,\n            \"longitude\": 0.444,\n            \"visibility\": {\n                \"id\": 1,\n                \"name\": \"public\"\n            },\n            \"author\": {\n                \"id\": 23,\n                \"name\": \"pep\",\n                \"email\": \"pep.castelltort@insjoaquimmir.cat\",\n                \"created_at\": \"2024-02-27T18:20:08.000000Z\",\n                \"updated_at\": \"2024-02-27T18:20:08.000000Z\"\n            },\n            \"created_at\": \"2024-02-28T11:16:50.000000Z\",\n            \"updated_at\": \"2024-02-28T11:16:50.000000Z\",\n            \"likes_count\": 0,\n            \"comments_count\": 0,\n            \"liked\": false,\n            \"commented\": false\n        },\n        {\n            \"id\": 6,\n            \"body\": \"Hola caracola\",\n            \"file\": {\n                \"id\": 18,\n                \"filepath\": \"uploads/1709119020_Captura de pantalla de 2023-01-24 19-07-33.png\",\n                \"filesize\": 68124,\n                \"created_at\": \"2024-02-28T11:17:00.000000Z\",\n                \"updated_at\": \"2024-02-28T11:17:00.000000Z\"\n            },\n            \"latitude\": 1.887,\n            \"longitude\": 0.444,\n            \"visibility\": {\n                \"id\": 1,\n                \"name\": \"public\"\n            },\n            \"author\": {\n                \"id\": 23,\n                \"name\": \"pep\",\n                \"email\": \"pep.castelltort@insjoaquimmir.cat\",\n                \"created_at\": \"2024-02-27T18:20:08.000000Z\",\n                \"updated_at\": \"2024-02-27T18:20:08.000000Z\"\n            },\n            \"created_at\": \"2024-02-28T11:17:00.000000Z\",\n            \"updated_at\": \"2024-02-28T11:17:00.000000Z\",\n            \"likes_count\": 0,\n            \"comments_count\": 0,\n            \"liked\": false,\n            \"commented\": false\n        },\n        {\n            \"id\": 7,\n            \"body\": \"Hola caracola\",\n            \"file\": {\n                \"id\": 19,\n                \"filepath\": \"uploads/1709119061_Captura de pantalla de 2023-01-24 19-07-33.png\",\n                \"filesize\": 68124,\n                \"created_at\": \"2024-02-28T11:17:41.000000Z\",\n                \"updated_at\": \"2024-02-28T11:17:41.000000Z\"\n            },\n            \"latitude\": 1.887,\n            \"longitude\": 0.444,\n            \"visibility\": {\n                \"id\": 1,\n                \"name\": \"public\"\n            },\n            \"author\": {\n                \"id\": 23,\n                \"name\": \"pep\",\n                \"email\": \"pep.castelltort@insjoaquimmir.cat\",\n                \"created_at\": \"2024-02-27T18:20:08.000000Z\",\n                \"updated_at\": \"2024-02-27T18:20:08.000000Z\"\n            },\n            \"created_at\": \"2024-02-28T11:17:41.000000Z\",\n            \"updated_at\": \"2024-02-28T11:17:41.000000Z\",\n            \"likes_count\": 0,\n            \"comments_count\": 0,\n            \"liked\": false,\n            \"commented\": false\n        },\n        {\n            \"id\": 8,\n            \"body\": \"Hola caracola\",\n            \"file\": {\n                \"id\": 20,\n                \"filepath\": \"uploads/1709119083_Captura de pantalla de 2023-01-24 19-07-33.png\",\n                \"filesize\": 68124,\n                \"created_at\": \"2024-02-28T11:18:03.000000Z\",\n                \"updated_at\": \"2024-02-28T11:18:03.000000Z\"\n            },\n            \"latitude\": 1.887,\n            \"longitude\": 0.444,\n            \"visibility\": {\n                \"id\": 1,\n                \"name\": \"public\"\n            },\n            \"author\": {\n                \"id\": 23,\n                \"name\": \"pep\",\n                \"email\": \"pep.castelltort@insjoaquimmir.cat\",\n                \"created_at\": \"2024-02-27T18:20:08.000000Z\",\n                \"updated_at\": \"2024-02-27T18:20:08.000000Z\"\n            },\n            \"created_at\": \"2024-02-28T11:18:03.000000Z\",\n            \"updated_at\": \"2024-02-28T11:18:03.000000Z\",\n            \"likes_count\": 0,\n            \"comments_count\": 0,\n            \"liked\": false,\n            \"commented\": false\n        },\n        {\n            \"id\": 9,\n            \"body\": \"Hola caracola\",\n            \"file\": {\n                \"id\": 21,\n                \"filepath\": \"uploads/1709119130_Captura de pantalla de 2023-01-24 19-07-33.png\",\n                \"filesize\": 68124,\n                \"created_at\": \"2024-02-28T11:18:50.000000Z\",\n                \"updated_at\": \"2024-02-28T11:18:50.000000Z\"\n            },\n            \"latitude\": 1.887,\n            \"longitude\": 0.444,\n            \"visibility\": {\n                \"id\": 1,\n                \"name\": \"public\"\n            },\n            \"author\": {\n                \"id\": 23,\n                \"name\": \"pep\",\n                \"email\": \"pep.castelltort@insjoaquimmir.cat\",\n                \"created_at\": \"2024-02-27T18:20:08.000000Z\",\n                \"updated_at\": \"2024-02-27T18:20:08.000000Z\"\n            },\n            \"created_at\": \"2024-02-28T11:18:50.000000Z\",\n            \"updated_at\": \"2024-02-28T11:18:50.000000Z\",\n            \"likes_count\": 1,\n            \"comments_count\": 0,\n            \"liked\": false,\n            \"commented\": false\n        },\n        {\n            \"id\": 10,\n            \"body\": \"Hola caracola\",\n            \"file\": {\n                \"id\": 22,\n                \"filepath\": \"uploads/1709119271_Captura de pantalla de 2023-01-24 19-07-33.png\",\n                \"filesize\": 68124,\n                \"created_at\": \"2024-02-28T11:21:11.000000Z\",\n                \"updated_at\": \"2024-02-28T11:21:11.000000Z\"\n            },\n            \"latitude\": 1.887,\n            \"longitude\": 0.444,\n            \"visibility\": {\n                \"id\": 1,\n                \"name\": \"public\"\n            },\n            \"author\": {\n                \"id\": 23,\n                \"name\": \"pep\",\n                \"email\": \"pep.castelltort@insjoaquimmir.cat\",\n                \"created_at\": \"2024-02-27T18:20:08.000000Z\",\n                \"updated_at\": \"2024-02-27T18:20:08.000000Z\"\n            },\n            \"created_at\": \"2024-02-28T11:21:11.000000Z\",\n            \"updated_at\": \"2024-02-28T11:21:11.000000Z\",\n            \"likes_count\": 0,\n            \"comments_count\": 0,\n            \"liked\": false,\n            \"commented\": false\n        },\n        {\n            \"id\": 11,\n            \"body\": \"Hola caracola\",\n            \"file\": {\n                \"id\": 23,\n                \"filepath\": \"uploads/1709119298_Captura de pantalla de 2023-01-24 19-07-33.png\",\n                \"filesize\": 68124,\n                \"created_at\": \"2024-02-28T11:21:38.000000Z\",\n                \"updated_at\": \"2024-02-28T11:21:38.000000Z\"\n            },\n            \"latitude\": 1.887,\n            \"longitude\": 0.444,\n            \"visibility\": {\n                \"id\": 1,\n                \"name\": \"public\"\n            },\n            \"author\": {\n                \"id\": 23,\n                \"name\": \"pep\",\n                \"email\": \"pep.castelltort@insjoaquimmir.cat\",\n                \"created_at\": \"2024-02-27T18:20:08.000000Z\",\n                \"updated_at\": \"2024-02-27T18:20:08.000000Z\"\n            },\n            \"created_at\": \"2024-02-28T11:21:38.000000Z\",\n            \"updated_at\": \"2024-02-28T11:21:38.000000Z\",\n            \"likes_count\": 0,\n            \"comments_count\": 0,\n            \"liked\": false,\n            \"commented\": false\n        },\n        {\n            \"id\": 12,\n            \"body\": \"Hola caracola\",\n            \"file\": {\n                \"id\": 24,\n                \"filepath\": \"uploads/1709119422_Captura de pantalla de 2023-01-24 19-07-33.png\",\n                \"filesize\": 68124,\n                \"created_at\": \"2024-02-28T11:23:42.000000Z\",\n                \"updated_at\": \"2024-02-28T11:23:42.000000Z\"\n            },\n            \"latitude\": 1.887,\n            \"longitude\": 0.444,\n            \"visibility\": {\n                \"id\": 1,\n                \"name\": \"public\"\n            },\n            \"author\": {\n                \"id\": 23,\n                \"name\": \"pep\",\n                \"email\": \"pep.castelltort@insjoaquimmir.cat\",\n                \"created_at\": \"2024-02-27T18:20:08.000000Z\",\n                \"updated_at\": \"2024-02-27T18:20:08.000000Z\"\n            },\n            \"created_at\": \"2024-02-28T11:23:42.000000Z\",\n            \"updated_at\": \"2024-02-28T11:23:42.000000Z\",\n            \"likes_count\": 0,\n            \"comments_count\": 0,\n            \"liked\": false,\n            \"commented\": false\n        },\n        {\n            \"id\": 13,\n            \"body\": \"Hola caracola\",\n            \"file\": {\n                \"id\": 25,\n                \"filepath\": \"uploads/1709119499_Captura de pantalla de 2023-01-24 19-07-33.png\",\n                \"filesize\": 68124,\n                \"created_at\": \"2024-02-28T11:24:59.000000Z\",\n                \"updated_at\": \"2024-02-28T11:24:59.000000Z\"\n            },\n            \"latitude\": 1.887,\n            \"longitude\": 0.444,\n            \"visibility\": {\n                \"id\": 1,\n                \"name\": \"public\"\n            },\n            \"author\": {\n                \"id\": 23,\n                \"name\": \"pep\",\n                \"email\": \"pep.castelltort@insjoaquimmir.cat\",\n                \"created_at\": \"2024-02-27T18:20:08.000000Z\",\n                \"updated_at\": \"2024-02-27T18:20:08.000000Z\"\n            },\n            \"created_at\": \"2024-02-28T11:24:59.000000Z\",\n            \"updated_at\": \"2024-02-28T11:24:59.000000Z\",\n            \"likes_count\": 0,\n            \"comments_count\": 0,\n            \"liked\": false,\n            \"commented\": false\n        },\n        {\n            \"id\": 14,\n            \"body\": \"Hola caracola\",\n            \"file\": {\n                \"id\": 26,\n                \"filepath\": \"uploads/1709119509_Captura de pantalla de 2023-01-24 19-07-33.png\",\n                \"filesize\": 68124,\n                \"created_at\": \"2024-02-28T11:25:09.000000Z\",\n                \"updated_at\": \"2024-02-28T11:25:09.000000Z\"\n            },\n            \"latitude\": 1.887,\n            \"longitude\": 0.444,\n            \"visibility\": {\n                \"id\": 1,\n                \"name\": \"public\"\n            },\n            \"author\": {\n                \"id\": 23,\n                \"name\": \"pep\",\n                \"email\": \"pep.castelltort@insjoaquimmir.cat\",\n                \"created_at\": \"2024-02-27T18:20:08.000000Z\",\n                \"updated_at\": \"2024-02-27T18:20:08.000000Z\"\n            },\n            \"created_at\": \"2024-02-28T11:25:09.000000Z\",\n            \"updated_at\": \"2024-02-28T11:25:09.000000Z\",\n            \"likes_count\": 0,\n            \"comments_count\": 0,\n            \"liked\": false,\n            \"commented\": false\n        },\n        {\n            \"id\": 15,\n            \"body\": \"Hola caracola\",\n            \"file\": {\n                \"id\": 27,\n                \"filepath\": \"uploads/1709119528_Captura de pantalla de 2023-01-24 19-07-33.png\",\n                \"filesize\": 68124,\n                \"created_at\": \"2024-02-28T11:25:28.000000Z\",\n                \"updated_at\": \"2024-02-28T11:25:28.000000Z\"\n            },\n            \"latitude\": 1.887,\n            \"longitude\": 0.444,\n            \"visibility\": {\n                \"id\": 1,\n                \"name\": \"public\"\n            },\n            \"author\": {\n                \"id\": 23,\n                \"name\": \"pep\",\n                \"email\": \"pep.castelltort@insjoaquimmir.cat\",\n                \"created_at\": \"2024-02-27T18:20:08.000000Z\",\n                \"updated_at\": \"2024-02-27T18:20:08.000000Z\"\n            },\n            \"created_at\": \"2024-02-28T11:25:28.000000Z\",\n            \"updated_at\": \"2024-02-28T11:25:28.000000Z\",\n            \"likes_count\": 0,\n            \"comments_count\": 0,\n            \"liked\": false,\n            \"commented\": false\n        },\n        {\n            \"id\": 17,\n            \"body\": \"Hola caracola\",\n            \"file\": {\n                \"id\": 32,\n                \"filepath\": \"uploads/1709122589_Captura de pantalla de 2023-01-24 19-07-33.png\",\n                \"filesize\": 68124,\n                \"created_at\": \"2024-02-28T12:16:29.000000Z\",\n                \"updated_at\": \"2024-02-28T12:16:29.000000Z\"\n            },\n            \"latitude\": 1.887,\n            \"longitude\": 0.444,\n            \"visibility\": {\n                \"id\": 1,\n                \"name\": \"public\"\n            },\n            \"author\": {\n                \"id\": 23,\n                \"name\": \"pep\",\n                \"email\": \"pep.castelltort@insjoaquimmir.cat\",\n                \"created_at\": \"2024-02-27T18:20:08.000000Z\",\n                \"updated_at\": \"2024-02-27T18:20:08.000000Z\"\n            },\n            \"created_at\": \"2024-02-28T12:16:29.000000Z\",\n            \"updated_at\": \"2024-02-28T12:16:29.000000Z\",\n            \"likes_count\": 0,\n            \"comments_count\": 0,\n            \"liked\": false,\n            \"commented\": false\n        },\n        {\n            \"id\": 25,\n            \"body\": \"Holaaaaaaaaaa\",\n            \"file\": {\n                \"id\": 44,\n                \"filepath\": \"uploads/1709145151_Captura de pantalla de 2023-01-24 19-07-33.png\",\n                \"filesize\": 68124,\n                \"created_at\": \"2024-02-28T18:32:31.000000Z\",\n                \"updated_at\": \"2024-02-28T18:32:31.000000Z\"\n            },\n            \"latitude\": 1.666,\n            \"longitude\": 0.222,\n            \"visibility\": {\n                \"id\": 2,\n                \"name\": \"contacts\"\n            },\n            \"author\": {\n                \"id\": 23,\n                \"name\": \"pep\",\n                \"email\": \"pep.castelltort@insjoaquimmir.cat\",\n                \"created_at\": \"2024-02-27T18:20:08.000000Z\",\n                \"updated_at\": \"2024-02-27T18:20:08.000000Z\"\n            },\n            \"created_at\": \"2024-02-28T18:32:31.000000Z\",\n            \"updated_at\": \"2024-02-28T18:33:37.000000Z\",\n            \"likes_count\": 0,\n            \"comments_count\": 1,\n            \"liked\": false,\n            \"commented\": false\n        },\n        {\n            \"id\": 32,\n            \"body\": \"Holaaaaaaaaaa\",\n            \"file\": {\n                \"id\": 59,\n                \"filepath\": \"uploads/1709146921_Captura de pantalla de 2023-01-24 19-07-33.png\",\n                \"filesize\": 68124,\n                \"created_at\": \"2024-02-28T19:02:01.000000Z\",\n                \"updated_at\": \"2024-02-28T19:02:01.000000Z\"\n            },\n            \"latitude\": 1.666,\n            \"longitude\": 0.111,\n            \"visibility\": {\n                \"id\": 2,\n                \"name\": \"contacts\"\n            },\n            \"author\": {\n                \"id\": 23,\n                \"name\": \"pep\",\n                \"email\": \"pep.castelltort@insjoaquimmir.cat\",\n                \"created_at\": \"2024-02-27T18:20:08.000000Z\",\n                \"updated_at\": \"2024-02-27T18:20:08.000000Z\"\n            },\n            \"created_at\": \"2024-02-28T19:02:01.000000Z\",\n            \"updated_at\": \"2024-02-28T19:03:50.000000Z\",\n            \"likes_count\": 0,\n            \"comments_count\": 0,\n            \"liked\": false,\n            \"commented\": false\n        },\n        {\n            \"id\": 34,\n            \"body\": \"Mewing on the house. att alex gi\",\n            \"file\": {\n                \"id\": 63,\n                \"filepath\": \"uploads/1709221796_main-qimg-75585b626d90a4d22588b5a0ba25ac7b-lq.jpeg\",\n                \"filesize\": 31178,\n                \"created_at\": \"2024-02-29T15:49:56.000000Z\",\n                \"updated_at\": \"2024-02-29T15:49:56.000000Z\"\n            },\n            \"latitude\": 41.23126,\n            \"longitude\": 1.7285300000000001,\n            \"visibility\": {\n                \"id\": 1,\n                \"name\": \"public\"\n            },\n            \"author\": {\n                \"id\": 8,\n                \"name\": \"cristian martinez\",\n                \"email\": \"crmagu@fp.insjoaquimmir.cat\",\n                \"created_at\": \"2024-02-26T18:56:46.000000Z\",\n                \"updated_at\": \"2024-02-26T18:56:46.000000Z\"\n            },\n            \"created_at\": \"2024-02-29T15:49:56.000000Z\",\n            \"updated_at\": \"2024-02-29T15:49:56.000000Z\",\n            \"likes_count\": 1,\n            \"comments_count\": 0,\n            \"liked\": false,\n            \"commented\": false\n        },\n        {\n            \"id\": 38,\n            \"body\": \"asdasdasdasdasd asdasdsad asdasdasdasd\",\n            \"file\": {\n                \"id\": 73,\n                \"filepath\": \"uploads/1709229852_mewing.jpeg\",\n                \"filesize\": 31178,\n                \"created_at\": \"2024-02-29T18:04:12.000000Z\",\n                \"updated_at\": \"2024-02-29T18:04:12.000000Z\"\n            },\n            \"latitude\": 41.236,\n            \"longitude\": 1.7252999999999998,\n            \"visibility\": {\n                \"id\": 1,\n                \"name\": \"public\"\n            },\n            \"author\": {\n                \"id\": 8,\n                \"name\": \"cristian martinez\",\n                \"email\": \"crmagu@fp.insjoaquimmir.cat\",\n                \"created_at\": \"2024-02-26T18:56:46.000000Z\",\n                \"updated_at\": \"2024-02-26T18:56:46.000000Z\"\n            },\n            \"created_at\": \"2024-02-29T18:04:12.000000Z\",\n            \"updated_at\": \"2024-02-29T18:04:12.000000Z\",\n            \"likes_count\": 0,\n            \"comments_count\": 0,\n            \"liked\": false,\n            \"commented\": false\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Read post",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status OK\", function () {",
											"    pm.response.to.be.ok;",
											"})",
											"",
											"pm.test(\"JSON response\", function () {",
											"    pm.response.to.be.json;",
											"    pm.response.to.be.an(\"object\");",
											"    pm.response.to.have.jsonBody(\"success\");",
											"    pm.response.to.have.jsonBody(\"data\");",
											"    pm.response.to.not.have.jsonBody(\"error\");",
											"});",
											"",
											"pm.test(\"JSON response: success\", function () {",
											"    var jsonResponse = pm.response.json();",
											"    pm.expect(jsonResponse.success).to.be.a(\"boolean\");",
											"    pm.expect(jsonResponse.success).to.eql(true);",
											"});",
											"",
											"pm.test(\"JSON response: data\", function () {",
											"    var jsonResponse = pm.response.json();",
											"    pm.expect(jsonResponse.data).to.be.a(\"object\");",
											"    // Data",
											"    pm.expect(jsonResponse.data).to.have.property(\"id\");",
											"    pm.expect(jsonResponse.data).to.have.property(\"body\");",
											"    pm.expect(jsonResponse.data).to.have.property(\"latitude\");",
											"    pm.expect(jsonResponse.data).to.have.property(\"longitude\");",
											"    pm.expect(jsonResponse.data).to.have.property(\"created_at\");",
											"    pm.expect(jsonResponse.data).to.have.property(\"updated_at\");",
											"    // Relationships",
											"    pm.expect(jsonResponse.data).to.have.any.key(\"file\",\"file_id\");",
											"    pm.expect(jsonResponse.data).to.have.any.key(\"visibility\",\"visibility_id\");",
											"    pm.expect(jsonResponse.data).to.have.any.key(\"author\",\"author_id\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL_ENDPOINT}}/api/posts/{{post}}",
									"host": [
										"{{URL_ENDPOINT}}"
									],
									"path": [
										"api",
										"posts",
										"{{post}}"
									]
								}
							},
							"response": [
								{
									"name": "Read post",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{URL_ENDPOINT}}/api/posts/{{post}}",
											"host": [
												"{{URL_ENDPOINT}}"
											],
											"path": [
												"api",
												"posts",
												"{{post}}"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Fri, 01 Mar 2024 11:59:28 GMT"
										},
										{
											"key": "Server",
											"value": "Apache/2.4.52 (Ubuntu)"
										},
										{
											"key": "Vary",
											"value": "Authorization"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, private"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "60"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "56"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5, max=100"
										},
										{
											"key": "Connection",
											"value": "Keep-Alive"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"data\": {\n        \"id\": 40,\n        \"body\": \"Hola caracola\",\n        \"file\": {\n            \"id\": 77,\n            \"filepath\": \"uploads/1709294358_Captura de pantalla de 2023-01-24 19-07-33.png\",\n            \"filesize\": 68124,\n            \"created_at\": \"2024-03-01T11:59:18.000000Z\",\n            \"updated_at\": \"2024-03-01T11:59:18.000000Z\"\n        },\n        \"latitude\": 1.887,\n        \"longitude\": 0.444,\n        \"visibility\": {\n            \"id\": 1,\n            \"name\": \"public\"\n        },\n        \"author\": {\n            \"id\": 93,\n            \"name\": \"test_1709293668\",\n            \"email\": \"test_1709293668@xtec.cat\",\n            \"created_at\": \"2024-03-01T11:47:48.000000Z\",\n            \"updated_at\": \"2024-03-01T11:47:48.000000Z\"\n        },\n        \"created_at\": \"2024-03-01T11:59:18.000000Z\",\n        \"updated_at\": \"2024-03-01T11:59:18.000000Z\",\n        \"likes_count\": 0,\n        \"comments_count\": 0,\n        \"liked\": false,\n        \"commented\": false\n    }\n}"
								}
							]
						},
						{
							"name": "Read post NOT FOUND",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status 404\", function () {",
											"    pm.response.to.be.notFound;",
											"})",
											"",
											"pm.test(\"JSON response\", function () {",
											"    pm.response.to.be.json;",
											"    pm.response.to.be.an(\"object\");",
											"    pm.response.to.have.jsonBody(\"success\");",
											"    pm.response.to.have.jsonBody(\"message\");",
											"});",
											"",
											"pm.test(\"JSON response: success\", function () {",
											"    var jsonResponse = pm.response.json();",
											"    pm.expect(jsonResponse.success).to.be.a(\"boolean\");",
											"    pm.expect(jsonResponse.success).to.eql(false);",
											"});",
											"",
											"pm.test(\"JSON response: message\", function () {",
											"    var jsonResponse = pm.response.json();",
											"    pm.expect(jsonResponse.message).to.be.a(\"string\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL_ENDPOINT}}/api/posts/{{NOT_EXISTS}}",
									"host": [
										"{{URL_ENDPOINT}}"
									],
									"path": [
										"api",
										"posts",
										"{{NOT_EXISTS}}"
									]
								}
							},
							"response": [
								{
									"name": "Read post NOT FOUND",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{URL_ENDPOINT}}/api/posts/{{NOT_EXISTS}}",
											"host": [
												"{{URL_ENDPOINT}}"
											],
											"path": [
												"api",
												"posts",
												"{{NOT_EXISTS}}"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Wed, 28 Feb 2024 11:55:59 GMT"
										},
										{
											"key": "Server",
											"value": "Apache/2.4.52 (Ubuntu)"
										},
										{
											"key": "Vary",
											"value": "Authorization"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, private"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "60"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "59"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5, max=100"
										},
										{
											"key": "Connection",
											"value": "Keep-Alive"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"message\": \"Post not found\"\n}"
								}
							]
						},
						{
							"name": "Update post",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status OK\", function () {",
											"    pm.response.to.be.ok;",
											"})",
											"",
											"pm.test(\"JSON response\", function () {",
											"    pm.response.to.be.json;",
											"    pm.response.to.be.an(\"object\");",
											"    pm.response.to.have.jsonBody(\"success\");",
											"    pm.response.to.have.jsonBody(\"data\");",
											"    pm.response.to.not.have.jsonBody(\"error\");",
											"});",
											"",
											"pm.test(\"JSON response: success\", function () {",
											"    var jsonResponse = pm.response.json();",
											"    pm.expect(jsonResponse.success).to.be.a(\"boolean\");",
											"    pm.expect(jsonResponse.success).to.eql(true);",
											"});",
											"",
											"pm.test(\"JSON response: data\", function () {",
											"    var jsonResponse = pm.response.json();",
											"    pm.expect(jsonResponse.data).to.be.a(\"object\");",
											"    // Data",
											"    pm.expect(jsonResponse.data).to.have.property(\"id\");",
											"    pm.expect(jsonResponse.data).to.have.property(\"body\");",
											"    pm.expect(jsonResponse.data).to.have.property(\"latitude\");",
											"    pm.expect(jsonResponse.data).to.have.property(\"longitude\");",
											"    pm.expect(jsonResponse.data).to.have.property(\"created_at\");",
											"    pm.expect(jsonResponse.data).to.have.property(\"updated_at\");",
											"    // Relationships",
											"    pm.expect(jsonResponse.data).to.have.any.key(\"file\",\"file_id\");",
											"    pm.expect(jsonResponse.data).to.have.any.key(\"visibility\",\"visibility_id\");",
											"    pm.expect(jsonResponse.data).to.have.any.key(\"author\",\"author_id\");",
											"});",
											"",
											"pm.test(\"JSON response: data updated\", function () {",
											"    var jsonResponseData = pm.response.json().data;",
											"    pm.expect(jsonResponseData.body).equal(pm.request.body.formdata.get('body'))",
											"    pm.expect(jsonResponseData.latitude).equal(pm.request.body.formdata.get('latitude'))",
											"    pm.expect(jsonResponseData.longitude).equal(pm.request.body.formdata.get('longitude'))      ",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "body",
											"value": "Holaaaaaaaaaa",
											"type": "text"
										},
										{
											"key": "upload",
											"type": "file",
											"src": "/home/pepe/Imatges/30-apr-2013-92.jpg",
											"disabled": true
										},
										{
											"key": "latitude",
											"value": "1.666",
											"type": "text"
										},
										{
											"key": "longitude",
											"value": "0.111",
											"type": "text"
										},
										{
											"key": "visibility",
											"value": "2",
											"type": "text",
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{URL_ENDPOINT}}/api/posts/{{post}}",
									"host": [
										"{{URL_ENDPOINT}}"
									],
									"path": [
										"api",
										"posts",
										"{{post}}"
									]
								}
							},
							"response": [
								{
									"name": "Update post",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "body",
													"value": "Holaaaaaaaaaa",
													"type": "text"
												},
												{
													"key": "latitude",
													"value": "1.887",
													"type": "text"
												},
												{
													"key": "longitude",
													"value": "0.444",
													"type": "text"
												},
												{
													"key": "visibility",
													"value": "2",
													"type": "text"
												},
												{
													"key": "upload",
													"type": "file",
													"src": "/home/pepe/Imatges/30-apr-2013-92.jpg",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "{{URL_ENDPOINT}}/api/posts/{{post}}",
											"host": [
												"{{URL_ENDPOINT}}"
											],
											"path": [
												"api",
												"posts",
												"{{post}}"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Host",
											"value": "127.0.0.1:8000"
										},
										{
											"key": "Date",
											"value": "Thu, 08 Dec 2022 19:08:45 GMT"
										},
										{
											"key": "Date",
											"value": "Thu, 08 Dec 2022 19:08:45 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										},
										{
											"key": "X-Powered-By",
											"value": "PHP/8.1.11"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, private"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "60"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "57"
										},
										{
											"key": "phpdebugbar-id",
											"value": "X6709a426ccc956c479b47f9f95cdb0b3"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"data\": {\n        \"id\": 1,\n        \"body\": \"Holaaaaaaaaaa\",\n        \"file\": {\n            \"id\": 2,\n            \"filepath\": \"uploads/1670439345_30-apr-2013-92.jpg\",\n            \"filesize\": 167837,\n            \"created_at\": \"2022-12-07T16:16:01.000000Z\",\n            \"updated_at\": \"2022-12-07T18:55:45.000000Z\"\n        },\n        \"latitude\": \"1.887\",\n        \"longitude\": \"0.444\",\n        \"visibility\": {\n            \"id\": 2,\n            \"name\": \"contacts\"\n        },\n        \"author\": {\n            \"id\": 173,\n            \"name\": \"pep.jimenez\",\n            \"email\": \"pep.jimenez@insjoaquimmir.cat\",\n            \"created_at\": \"2022-12-07T16:14:39.000000Z\",\n            \"updated_at\": \"2022-12-07T16:14:39.000000Z\"\n        },\n        \"created_at\": \"2022-12-07T16:16:01.000000Z\",\n        \"updated_at\": \"2022-12-07T18:55:45.000000Z\",\n        \"likes_count\": null\n    }\n}"
								}
							]
						},
						{
							"name": "Update post INVALID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status 422\", function () {",
											"    pm.response.to.have.status(422)",
											"})",
											"",
											"pm.test(\"JSON response\", function () {",
											"    pm.response.to.be.json;",
											"    pm.response.to.be.an(\"object\");",
											"    pm.response.to.have.jsonBody(\"message\");",
											"    pm.response.to.have.jsonBody(\"errors\");",
											"});",
											"",
											"pm.test(\"JSON response: message\", function () {",
											"    var jsonResponse = pm.response.json();",
											"    pm.expect(jsonResponse.message).to.be.a(\"string\");",
											"});",
											"",
											"pm.test(\"JSON response: errors\", function () {",
											"    var jsonResponse = pm.response.json();",
											"    pm.expect(jsonResponse.errors).to.be.a(\"object\");",
											"    pm.expect(jsonResponse.errors).to.have.key(\"latitude\",\"visibility\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "body",
											"value": "Holaaaaaaaaaa",
											"type": "text"
										},
										{
											"key": "upload",
											"type": "file",
											"src": "/home/pepe/Imatges/30-apr-2013-92.jpg",
											"disabled": true
										},
										{
											"key": "latitude",
											"value": "error",
											"type": "text"
										},
										{
											"key": "longitude",
											"value": "0.222",
											"type": "text",
											"disabled": true
										},
										{
											"key": "visibility",
											"value": "error",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{URL_ENDPOINT}}/api/posts/{{post}}",
									"host": [
										"{{URL_ENDPOINT}}"
									],
									"path": [
										"api",
										"posts",
										"{{post}}"
									]
								}
							},
							"response": [
								{
									"name": "Update post INVALID",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "body",
													"value": "Holaaaaaaaaaa",
													"type": "text"
												},
												{
													"key": "upload",
													"type": "file",
													"src": "/home/pepe/Imatges/30-apr-2013-92.jpg",
													"disabled": true
												},
												{
													"key": "latitude",
													"value": "error",
													"type": "text"
												},
												{
													"key": "longitude",
													"value": "0.222",
													"type": "text",
													"disabled": true
												},
												{
													"key": "visibility",
													"value": "error",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{URL_ENDPOINT}}/api/posts/{{post}}",
											"host": [
												"{{URL_ENDPOINT}}"
											],
											"path": [
												"api",
												"posts",
												"{{post}}"
											]
										}
									},
									"status": "Unprocessable Content",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Wed, 28 Feb 2024 18:37:46 GMT"
										},
										{
											"key": "Server",
											"value": "Apache/2.4.52 (Ubuntu)"
										},
										{
											"key": "Vary",
											"value": "Authorization"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, private"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "60"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "57"
										},
										{
											"key": "phpdebugbar-id",
											"value": "X8a3c39d0688dfb82ab89a3d7133cd501"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5, max=100"
										},
										{
											"key": "Connection",
											"value": "Keep-Alive"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n    \"message\": \"The latitude must be a number. (and 1 more error)\",\n    \"errors\": {\n        \"latitude\": [\n            \"The latitude must be a number.\"\n        ],\n        \"visibility\": [\n            \"The visibility must be an integer.\"\n        ]\n    }\n}"
								}
							]
						}
					]
				},
				{
					"name": "Likes",
					"item": [
						{
							"name": "Like post",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status OK\", function () {",
											"    pm.response.to.be.ok;",
											"})",
											"",
											"pm.test(\"JSON response\", function () {",
											"    pm.response.to.be.json;",
											"    pm.response.to.be.an(\"object\");",
											"    pm.response.to.have.jsonBody(\"success\");",
											"    pm.response.to.have.jsonBody(\"data\");",
											"    pm.response.to.not.have.jsonBody(\"error\");",
											"});",
											"",
											"pm.test(\"JSON response: success\", function () {",
											"    var jsonResponse = pm.response.json();",
											"    pm.expect(jsonResponse.success).to.be.a(\"boolean\");",
											"    pm.expect(jsonResponse.success).to.eql(true);",
											"});",
											"",
											"pm.test(\"JSON response: data\", function () {",
											"    var jsonResponse = pm.response.json();",
											"    pm.expect(jsonResponse.data).to.be.a(\"object\");",
											"    // Data",
											"    pm.expect(jsonResponse.data).to.have.property(\"id\");",
											"    // Relationships",
											"    pm.expect(jsonResponse.data).to.have.any.key(\"user\",\"user_id\");",
											"    pm.expect(jsonResponse.data).to.have.any.key(\"post\",\"post_id\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL_ENDPOINT}}/api/posts/{{post}}/likes",
									"host": [
										"{{URL_ENDPOINT}}"
									],
									"path": [
										"api",
										"posts",
										"{{post}}",
										"likes"
									]
								}
							},
							"response": [
								{
									"name": "Like post",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{URL_ENDPOINT}}/api/posts/{{post}}/likes",
											"host": [
												"{{URL_ENDPOINT}}"
											],
											"path": [
												"api",
												"posts",
												"{{post}}",
												"likes"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Host",
											"value": "127.0.0.1:8000"
										},
										{
											"key": "Date",
											"value": "Thu, 08 Dec 2022 19:08:58 GMT"
										},
										{
											"key": "Date",
											"value": "Thu, 08 Dec 2022 19:08:58 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										},
										{
											"key": "X-Powered-By",
											"value": "PHP/8.1.11"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, private"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "60"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "56"
										},
										{
											"key": "phpdebugbar-id",
											"value": "X63cb82c6a7a85201907896dca8e7d880"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"data\": {\n        \"user_id\": 173,\n        \"post_id\": \"1\",\n        \"id\": 6\n    }\n}"
								}
							]
						},
						{
							"name": "Like post ERROR",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status 400\", function () {",
											"    pm.response.to.be.badRequest;",
											"})",
											"",
											"pm.test(\"JSON response\", function () {",
											"    pm.response.to.be.json;",
											"    pm.response.to.be.an(\"object\");",
											"    pm.response.to.have.jsonBody(\"success\");",
											"    pm.response.to.have.jsonBody(\"message\");",
											"});",
											"",
											"pm.test(\"JSON response: success\", function () {",
											"    var jsonResponse = pm.response.json();",
											"    pm.expect(jsonResponse.success).to.be.a(\"boolean\");",
											"    pm.expect(jsonResponse.success).to.eql(false);",
											"});",
											"",
											"pm.test(\"JSON response: message\", function () {",
											"    var jsonResponse = pm.response.json();",
											"    pm.expect(jsonResponse.message).to.be.a(\"string\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL_ENDPOINT}}/api/posts/{{post}}/likes",
									"host": [
										"{{URL_ENDPOINT}}"
									],
									"path": [
										"api",
										"posts",
										"{{post}}",
										"likes"
									]
								}
							},
							"response": [
								{
									"name": "Like post ERROR",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{URL_ENDPOINT}}/api/posts/{{post}}/likes",
											"host": [
												"{{URL_ENDPOINT}}"
											],
											"path": [
												"api",
												"posts",
												"{{post}}",
												"likes"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Host",
											"value": "127.0.0.1:8000"
										},
										{
											"key": "Date",
											"value": "Thu, 08 Dec 2022 19:12:46 GMT"
										},
										{
											"key": "Date",
											"value": "Thu, 08 Dec 2022 19:12:46 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										},
										{
											"key": "X-Powered-By",
											"value": "PHP/8.1.11"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, private"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "60"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "59"
										},
										{
											"key": "phpdebugbar-id",
											"value": "X8cd8d4e2a5d5dc9d561327b57f442d9e"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"message\": \"Like already exists\"\n}"
								}
							]
						},
						{
							"name": "Unlike post",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status OK\", function () {",
											"    pm.response.to.be.ok;",
											"})",
											"",
											"pm.test(\"JSON response\", function () {",
											"    pm.response.to.be.json;",
											"    pm.response.to.be.an(\"object\");",
											"    pm.response.to.have.jsonBody(\"success\");",
											"    pm.response.to.have.jsonBody(\"data\");",
											"    pm.response.to.not.have.jsonBody(\"error\");",
											"});",
											"",
											"pm.test(\"JSON response: success\", function () {",
											"    var jsonResponse = pm.response.json();",
											"    pm.expect(jsonResponse.success).to.be.a(\"boolean\");",
											"    pm.expect(jsonResponse.success).to.eql(true);",
											"});",
											"",
											"pm.test(\"JSON response: data\", function () {",
											"    var jsonResponse = pm.response.json();",
											"    pm.expect(jsonResponse.data).to.be.a(\"object\");",
											"    // Data",
											"    pm.expect(jsonResponse.data).to.have.property(\"id\");",
											"    // Relationships",
											"    pm.expect(jsonResponse.data).to.have.any.key(\"user\",\"user_id\");",
											"    pm.expect(jsonResponse.data).to.have.any.key(\"post\",\"post_id\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL_ENDPOINT}}/api/posts/{{post}}/likes",
									"host": [
										"{{URL_ENDPOINT}}"
									],
									"path": [
										"api",
										"posts",
										"{{post}}",
										"likes"
									]
								}
							},
							"response": [
								{
									"name": "Unlike post",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{URL_ENDPOINT}}/api/posts/{{post}}/likes",
											"host": [
												"{{URL_ENDPOINT}}"
											],
											"path": [
												"api",
												"posts",
												"{{post}}",
												"likes"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Host",
											"value": "127.0.0.1:8000"
										},
										{
											"key": "Date",
											"value": "Thu, 08 Dec 2022 19:09:04 GMT"
										},
										{
											"key": "Date",
											"value": "Thu, 08 Dec 2022 19:09:04 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										},
										{
											"key": "X-Powered-By",
											"value": "PHP/8.1.11"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, private"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "60"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "59"
										},
										{
											"key": "phpdebugbar-id",
											"value": "X7a737e3afc1345726deb616bcc900b92"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"data\": {\n        \"id\": 6,\n        \"user_id\": 173,\n        \"post_id\": 1\n    }\n}"
								}
							]
						},
						{
							"name": "Unlike post ERROR",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status 400 or 404\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([400,404]);",
											"})",
											"",
											"pm.test(\"JSON response\", function () {",
											"    pm.response.to.be.json;",
											"    pm.response.to.be.an(\"object\");",
											"    pm.response.to.have.jsonBody(\"success\");",
											"    pm.response.to.have.jsonBody(\"message\");",
											"});",
											"",
											"pm.test(\"JSON response: success\", function () {",
											"    var jsonResponse = pm.response.json();",
											"    pm.expect(jsonResponse.success).to.be.a(\"boolean\");",
											"    pm.expect(jsonResponse.success).to.eql(false);",
											"});",
											"",
											"pm.test(\"JSON response: message\", function () {",
											"    var jsonResponse = pm.response.json();",
											"    pm.expect(jsonResponse.message).to.be.a(\"string\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL_ENDPOINT}}/api/posts/{{post}}/likes",
									"host": [
										"{{URL_ENDPOINT}}"
									],
									"path": [
										"api",
										"posts",
										"{{post}}",
										"likes"
									]
								}
							},
							"response": [
								{
									"name": "Unlike post ERROR",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{URL_ENDPOINT}}/api/posts/{{post}}/likes",
											"host": [
												"{{URL_ENDPOINT}}"
											],
											"path": [
												"api",
												"posts",
												"{{post}}",
												"likes"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Host",
											"value": "127.0.0.1:8000"
										},
										{
											"key": "Date",
											"value": "Thu, 08 Dec 2022 19:09:12 GMT"
										},
										{
											"key": "Date",
											"value": "Thu, 08 Dec 2022 19:09:12 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										},
										{
											"key": "X-Powered-By",
											"value": "PHP/8.1.11"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, private"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "60"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "58"
										},
										{
											"key": "phpdebugbar-id",
											"value": "X52a49d75147b7542bd681220995602c1"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"message\": \"Like not exists\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Comments",
					"item": [
						{
							"name": "Create comment",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status 201\", function () {",
											"    pm.response.to.be.success;",
											"    pm.response.to.have.status(201)",
											"})",
											"",
											"pm.test(\"JSON response\", function () {",
											"    pm.response.to.be.json;",
											"    pm.response.to.be.an(\"object\");",
											"    pm.response.to.have.jsonBody(\"success\");",
											"    pm.response.to.have.jsonBody(\"data\");",
											"    pm.response.to.not.have.jsonBody(\"error\");",
											"});",
											"",
											"pm.test(\"JSON response: success\", function () {",
											"    var jsonResponse = pm.response.json();",
											"    pm.expect(jsonResponse.success).to.be.a(\"boolean\");",
											"    pm.expect(jsonResponse.success).to.eql(true);",
											"});",
											"",
											"pm.test(\"JSON response: data\", function () {",
											"    var jsonResponse = pm.response.json();",
											"    pm.expect(jsonResponse.data).to.be.a(\"object\");",
											"    // Store last id to test other web services",
											"    pm.expect(jsonResponse.data).to.have.property(\"id\");",
											"    pm.collectionVariables.set(\"comment\", jsonResponse.data.id);",
											"    // Data",
											"    pm.expect(jsonResponse.data).to.have.property(\"comment\");",
											"    // Relationships",
											"    pm.expect(jsonResponse.data).to.have.any.key(\"user\",\"user_id\",\"author\",\"author_id\");",
											"    pm.expect(jsonResponse.data).to.have.any.key(\"post\",\"post_id\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"comment\": \"This post is great!\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL_ENDPOINT}}/api/posts/{{post}}/comments",
									"host": [
										"{{URL_ENDPOINT}}"
									],
									"path": [
										"api",
										"posts",
										"{{post}}",
										"comments"
									]
								}
							},
							"response": [
								{
									"name": "Create comment",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"comment\": \"This post is great!\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{URL_ENDPOINT}}/api/posts/{{post}}/comments",
											"host": [
												"{{URL_ENDPOINT}}"
											],
											"path": [
												"api",
												"posts",
												"{{post}}",
												"comments"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Wed, 28 Feb 2024 12:31:21 GMT"
										},
										{
											"key": "Server",
											"value": "Apache/2.4.52 (Ubuntu)"
										},
										{
											"key": "Vary",
											"value": "Authorization"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, private"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "60"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "58"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5, max=100"
										},
										{
											"key": "Connection",
											"value": "Keep-Alive"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"data\": {\n        \"id\": 1,\n        \"comment\": \"This post is great!\",\n        \"post\": {\n            \"id\": 20,\n            \"body\": \"Hola caracola\",\n            \"file\": {\n                \"id\": 35,\n                \"filepath\": \"uploads/1709123460_Captura de pantalla de 2023-01-24 19-07-33.png\",\n                \"filesize\": 68124,\n                \"created_at\": \"2024-02-28T12:31:00.000000Z\",\n                \"updated_at\": \"2024-02-28T12:31:00.000000Z\"\n            },\n            \"latitude\": 1.887,\n            \"longitude\": 0.444,\n            \"visibility\": {\n                \"id\": 1,\n                \"name\": \"public\"\n            },\n            \"author\": {\n                \"id\": 23,\n                \"name\": \"pep\",\n                \"email\": \"pep.castelltort@insjoaquimmir.cat\",\n                \"created_at\": \"2024-02-27T18:20:08.000000Z\",\n                \"updated_at\": \"2024-02-27T18:20:08.000000Z\"\n            },\n            \"created_at\": \"2024-02-28T12:31:00.000000Z\",\n            \"updated_at\": \"2024-02-28T12:31:00.000000Z\",\n            \"likes_count\": null,\n            \"comments_count\": null\n        },\n        \"user\": {\n            \"id\": 23,\n            \"name\": \"pep\",\n            \"email\": \"pep.castelltort@insjoaquimmir.cat\",\n            \"created_at\": \"2024-02-27T18:20:08.000000Z\",\n            \"updated_at\": \"2024-02-27T18:20:08.000000Z\"\n        },\n        \"created_at\": \"2024-02-28T12:31:21.000000Z\",\n        \"updated_at\": \"2024-02-28T12:31:21.000000Z\"\n    }\n}"
								}
							]
						},
						{
							"name": "Create comment ERROR",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status 400\", function () {",
											"    pm.response.to.be.badRequest;",
											"})",
											"",
											"pm.test(\"JSON response\", function () {",
											"    pm.response.to.be.json;",
											"    pm.response.to.be.an(\"object\");",
											"    pm.response.to.have.jsonBody(\"success\");",
											"    pm.response.to.have.jsonBody(\"message\");",
											"});",
											"",
											"pm.test(\"JSON response: success\", function () {",
											"    var jsonResponse = pm.response.json();",
											"    pm.expect(jsonResponse.success).to.be.a(\"boolean\");",
											"    pm.expect(jsonResponse.success).to.eql(false);",
											"});",
											"",
											"pm.test(\"JSON response: message\", function () {",
											"    var jsonResponse = pm.response.json();",
											"    pm.expect(jsonResponse.message).to.be.a(\"string\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"comment\": \"This post is great!\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL_ENDPOINT}}/api/posts/{{post}}/comments",
									"host": [
										"{{URL_ENDPOINT}}"
									],
									"path": [
										"api",
										"posts",
										"{{post}}",
										"comments"
									]
								}
							},
							"response": [
								{
									"name": "Create comment ERROR",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"comment\": \"This post is great!\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{URL_ENDPOINT}}/api/posts/{{post}}/comments",
											"host": [
												"{{URL_ENDPOINT}}"
											],
											"path": [
												"api",
												"posts",
												"{{post}}",
												"comments"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Wed, 28 Feb 2024 12:34:19 GMT"
										},
										{
											"key": "Server",
											"value": "Apache/2.4.52 (Ubuntu)"
										},
										{
											"key": "Vary",
											"value": "Authorization"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, private"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "60"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "55"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Connection",
											"value": "close"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"message\": \"Comment already created\"\n}"
								}
							]
						},
						{
							"name": "List comments",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const dataSchema = {",
											"    \"type\": \"array\",",
											"    \"items\": [{",
											"        \"type\": \"object\",",
											"        \"properties\":{",
											"            \"id\": {",
											"                \"type\":\"integer\"",
											"            },",
											"            \"comment\": {",
											"                \"type\":\"string\"",
											"            },",
											"            \"post_id\": {",
											"                \"type\":\"integer\"",
											"            },",
											"            \"post\": {",
											"                \"type\":\"object\"",
											"            },",
											"            \"user_id\": {",
											"                \"type\":\"integer\"",
											"            },",
											"            \"user\": {",
											"                \"type\":\"object\"",
											"            },",
											"            \"author_id\": {",
											"                \"type\":\"integer\"",
											"            },",
											"            \"author\": {",
											"                \"type\":\"object\"",
											"            },",
											"            \"created_at\": {",
											"                \"type\":\"string\"",
											"            },",
											"            \"updated_at\": {",
											"                \"type\":\"string\"",
											"            }",
											"        },",
											"        \"required\": [",
											"            \"id\",",
											"            \"comment\"",
											"        ]",
											"    }]",
											"};",
											"",
											"pm.test(\"Status OK\", function () {",
											"    pm.response.to.be.ok;",
											"})",
											"",
											"pm.test(\"JSON response\", function () {",
											"    pm.response.to.be.json;",
											"    pm.response.to.be.an(\"object\");",
											"    pm.response.to.have.jsonBody(\"success\");",
											"    pm.response.to.have.jsonBody(\"data\");",
											"    pm.response.to.not.have.jsonBody(\"error\");",
											"});",
											"",
											"pm.test(\"JSON response: success\", function () {",
											"    var jsonResponse = pm.response.json();",
											"    pm.expect(jsonResponse.success).to.be.a(\"boolean\");",
											"    pm.expect(jsonResponse.success).to.eql(true);",
											"});",
											"",
											"pm.test(\"JSON response: data\", function () {",
											"    var jsonResponse = pm.response.json();",
											"    pm.expect(jsonResponse.data).to.be.an(\"array\");",
											"    pm.expect(tv4.validate(jsonResponse.data, dataSchema)).to.be.true;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL_ENDPOINT}}/api/posts/{{post}}/comments",
									"host": [
										"{{URL_ENDPOINT}}"
									],
									"path": [
										"api",
										"posts",
										"{{post}}",
										"comments"
									]
								}
							},
							"response": [
								{
									"name": "List comments",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{URL_ENDPOINT}}/api/posts/{{post}}/comments",
											"host": [
												"{{URL_ENDPOINT}}"
											],
											"path": [
												"api",
												"posts",
												"{{post}}",
												"comments"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Wed, 28 Feb 2024 12:37:20 GMT"
										},
										{
											"key": "Server",
											"value": "Apache/2.4.52 (Ubuntu)"
										},
										{
											"key": "Vary",
											"value": "Authorization"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, private"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "60"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "57"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5, max=100"
										},
										{
											"key": "Connection",
											"value": "Keep-Alive"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"data\": [\n        {\n            \"id\": 1,\n            \"comment\": \"This post is great!\",\n            \"post\": {\n                \"id\": 20,\n                \"body\": \"Hola caracola\",\n                \"file\": {\n                    \"id\": 35,\n                    \"filepath\": \"uploads/1709123460_Captura de pantalla de 2023-01-24 19-07-33.png\",\n                    \"filesize\": 68124,\n                    \"created_at\": \"2024-02-28T12:31:00.000000Z\",\n                    \"updated_at\": \"2024-02-28T12:31:00.000000Z\"\n                },\n                \"latitude\": 1.887,\n                \"longitude\": 0.444,\n                \"visibility\": {\n                    \"id\": 1,\n                    \"name\": \"public\"\n                },\n                \"author\": {\n                    \"id\": 23,\n                    \"name\": \"pep\",\n                    \"email\": \"pep.castelltort@insjoaquimmir.cat\",\n                    \"created_at\": \"2024-02-27T18:20:08.000000Z\",\n                    \"updated_at\": \"2024-02-27T18:20:08.000000Z\"\n                },\n                \"created_at\": \"2024-02-28T12:31:00.000000Z\",\n                \"updated_at\": \"2024-02-28T12:31:00.000000Z\",\n                \"likes_count\": null,\n                \"comments_count\": null\n            },\n            \"user\": {\n                \"id\": 23,\n                \"name\": \"pep\",\n                \"email\": \"pep.castelltort@insjoaquimmir.cat\",\n                \"created_at\": \"2024-02-27T18:20:08.000000Z\",\n                \"updated_at\": \"2024-02-27T18:20:08.000000Z\"\n            },\n            \"created_at\": \"2024-02-28T12:31:21.000000Z\",\n            \"updated_at\": \"2024-02-28T12:31:21.000000Z\"\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Delete comment",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status OK\", function () {",
											"    pm.response.to.be.ok;",
											"})",
											"",
											"pm.test(\"JSON response\", function () {",
											"    pm.response.to.be.json;",
											"    pm.response.to.be.an(\"object\");",
											"    pm.response.to.have.jsonBody(\"success\");",
											"    pm.response.to.have.jsonBody(\"data\");",
											"    pm.response.to.not.have.jsonBody(\"error\");",
											"});",
											"",
											"pm.test(\"JSON response: success\", function () {",
											"    var jsonResponse = pm.response.json();",
											"    pm.expect(jsonResponse.success).to.be.a(\"boolean\");",
											"    pm.expect(jsonResponse.success).to.eql(true);",
											"});",
											"",
											"pm.test(\"JSON response: data\", function () {",
											"    var jsonResponse = pm.response.json();",
											"    pm.expect(jsonResponse.data).to.be.a(\"object\");",
											"    // Data",
											"    pm.expect(jsonResponse.data).to.have.property(\"id\");",
											"    pm.expect(jsonResponse.data).to.have.property(\"comment\");",
											"    // Relationships",
											"    pm.expect(jsonResponse.data).to.have.any.key(\"user\",\"user_id\",\"author\",\"author_id\");",
											"    pm.expect(jsonResponse.data).to.have.any.key(\"post\",\"post_id\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL_ENDPOINT}}/api/posts/{{post}}/comments/{{comment}}",
									"host": [
										"{{URL_ENDPOINT}}"
									],
									"path": [
										"api",
										"posts",
										"{{post}}",
										"comments",
										"{{comment}}"
									]
								}
							},
							"response": [
								{
									"name": "Delete comment",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{URL_ENDPOINT}}/api/posts/{{post}}/comments/{{comment}}",
											"host": [
												"{{URL_ENDPOINT}}"
											],
											"path": [
												"api",
												"posts",
												"{{post}}",
												"comments",
												"{{comment}}"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Wed, 28 Feb 2024 12:38:30 GMT"
										},
										{
											"key": "Server",
											"value": "Apache/2.4.52 (Ubuntu)"
										},
										{
											"key": "Vary",
											"value": "Authorization"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, private"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "60"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "56"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5, max=100"
										},
										{
											"key": "Connection",
											"value": "Keep-Alive"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"data\": {\n        \"id\": 2,\n        \"comment\": \"This post is great!\",\n        \"post\": {\n            \"id\": 20,\n            \"body\": \"Hola caracola\",\n            \"file\": {\n                \"id\": 35,\n                \"filepath\": \"uploads/1709123460_Captura de pantalla de 2023-01-24 19-07-33.png\",\n                \"filesize\": 68124,\n                \"created_at\": \"2024-02-28T12:31:00.000000Z\",\n                \"updated_at\": \"2024-02-28T12:31:00.000000Z\"\n            },\n            \"latitude\": 1.887,\n            \"longitude\": 0.444,\n            \"visibility\": {\n                \"id\": 1,\n                \"name\": \"public\"\n            },\n            \"author\": {\n                \"id\": 23,\n                \"name\": \"pep\",\n                \"email\": \"pep.castelltort@insjoaquimmir.cat\",\n                \"created_at\": \"2024-02-27T18:20:08.000000Z\",\n                \"updated_at\": \"2024-02-27T18:20:08.000000Z\"\n            },\n            \"created_at\": \"2024-02-28T12:31:00.000000Z\",\n            \"updated_at\": \"2024-02-28T12:31:00.000000Z\",\n            \"likes_count\": null,\n            \"comments_count\": null\n        },\n        \"user\": {\n            \"id\": 23,\n            \"name\": \"pep\",\n            \"email\": \"pep.castelltort@insjoaquimmir.cat\",\n            \"created_at\": \"2024-02-27T18:20:08.000000Z\",\n            \"updated_at\": \"2024-02-27T18:20:08.000000Z\"\n        },\n        \"created_at\": \"2024-02-28T12:38:24.000000Z\",\n        \"updated_at\": \"2024-02-28T12:38:24.000000Z\"\n    }\n}"
								}
							]
						},
						{
							"name": "Delete comment NOT FOUND",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status 404\", function () {",
											"    pm.response.to.be.notFound;",
											"})",
											"",
											"pm.test(\"JSON response\", function () {",
											"    pm.response.to.be.json;",
											"    pm.response.to.be.an(\"object\");",
											"    pm.response.to.have.jsonBody(\"success\");",
											"    pm.response.to.have.jsonBody(\"message\");",
											"});",
											"",
											"pm.test(\"JSON response: success\", function () {",
											"    var jsonResponse = pm.response.json();",
											"    pm.expect(jsonResponse.success).to.be.a(\"boolean\");",
											"    pm.expect(jsonResponse.success).to.eql(false);",
											"});",
											"",
											"pm.test(\"JSON response: message\", function () {",
											"    var jsonResponse = pm.response.json();",
											"    pm.expect(jsonResponse.message).to.be.a(\"string\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL_ENDPOINT}}/api/posts/{{post}}/comments/{{comment}}",
									"host": [
										"{{URL_ENDPOINT}}"
									],
									"path": [
										"api",
										"posts",
										"{{post}}",
										"comments",
										"{{comment}}"
									]
								}
							},
							"response": [
								{
									"name": "Delete comment NOT FOUND",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{URL_ENDPOINT}}/api/posts/{{post}}/comments/{{comment}}",
											"host": [
												"{{URL_ENDPOINT}}"
											],
											"path": [
												"api",
												"posts",
												"{{post}}",
												"comments",
												"{{comment}}"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Wed, 28 Feb 2024 12:38:17 GMT"
										},
										{
											"key": "Server",
											"value": "Apache/2.4.52 (Ubuntu)"
										},
										{
											"key": "Vary",
											"value": "Authorization"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, private"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "60"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "58"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5, max=99"
										},
										{
											"key": "Connection",
											"value": "Keep-Alive"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"message\": \"Comment not found\"\n}"
								}
							]
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Delete post",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status OK\", function () {",
									"    pm.response.to.be.ok;",
									"})",
									"",
									"pm.test(\"JSON response\", function () {",
									"    pm.response.to.be.json;",
									"    pm.response.to.be.an(\"object\");",
									"    pm.response.to.have.jsonBody(\"success\");",
									"    pm.response.to.have.jsonBody(\"data\");",
									"    pm.response.to.not.have.jsonBody(\"error\");",
									"});",
									"",
									"pm.test(\"JSON response: success\", function () {",
									"    var jsonResponse = pm.response.json();",
									"    pm.expect(jsonResponse.success).to.be.a(\"boolean\");",
									"    pm.expect(jsonResponse.success).to.eql(true);",
									"});",
									"",
									"pm.test(\"JSON response: data\", function () {",
									"    var jsonResponse = pm.response.json();",
									"    pm.expect(jsonResponse.data).to.be.a(\"object\");",
									"    // Data",
									"    pm.expect(jsonResponse.data).to.have.property(\"id\");",
									"    pm.expect(jsonResponse.data).to.have.property(\"body\");",
									"    pm.expect(jsonResponse.data).to.have.property(\"latitude\");",
									"    pm.expect(jsonResponse.data).to.have.property(\"longitude\");",
									"    pm.expect(jsonResponse.data).to.have.property(\"created_at\");",
									"    pm.expect(jsonResponse.data).to.have.property(\"updated_at\");",
									"    // Relationships",
									"    pm.expect(jsonResponse.data).to.have.any.key(\"file\",\"file_id\");",
									"    pm.expect(jsonResponse.data).to.have.any.key(\"visibility\",\"visibility_id\");",
									"    pm.expect(jsonResponse.data).to.have.any.key(\"author\",\"author_id\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL_ENDPOINT}}/api/posts/{{post}}",
							"host": [
								"{{URL_ENDPOINT}}"
							],
							"path": [
								"api",
								"posts",
								"{{post}}"
							]
						}
					},
					"response": [
						{
							"name": "Delete post",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL_ENDPOINT}}/api/posts/{{post}}",
									"host": [
										"{{URL_ENDPOINT}}"
									],
									"path": [
										"api",
										"posts",
										"{{post}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Host",
									"value": "127.0.0.1:8000"
								},
								{
									"key": "Date",
									"value": "Thu, 08 Dec 2022 19:13:48 GMT"
								},
								{
									"key": "Date",
									"value": "Thu, 08 Dec 2022 19:13:48 GMT"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.1.11"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "60"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "59"
								},
								{
									"key": "phpdebugbar-id",
									"value": "X3619952a83146300f03473fc9b981f5e"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"data\": {\n        \"id\": 1,\n        \"body\": \"Holaaaaaaaaaa\",\n        \"file\": {\n            \"id\": 2,\n            \"filepath\": \"uploads/1670439345_30-apr-2013-92.jpg\",\n            \"filesize\": 167837,\n            \"created_at\": \"2022-12-07T16:16:01.000000Z\",\n            \"updated_at\": \"2022-12-07T18:55:45.000000Z\"\n        },\n        \"latitude\": 1.887,\n        \"longitude\": 0.444,\n        \"visibility\": {\n            \"id\": 2,\n            \"name\": \"contacts\"\n        },\n        \"author\": {\n            \"id\": 173,\n            \"name\": \"pep.jimenez\",\n            \"email\": \"pep.jimenez@insjoaquimmir.cat\",\n            \"created_at\": \"2022-12-07T16:14:39.000000Z\",\n            \"updated_at\": \"2022-12-07T16:14:39.000000Z\"\n        },\n        \"created_at\": \"2022-12-07T16:16:01.000000Z\",\n        \"updated_at\": \"2022-12-07T18:55:45.000000Z\",\n        \"likes_count\": null\n    }\n}"
						}
					]
				},
				{
					"name": "Delete post NOT FOUND",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status 404\", function () {",
									"    pm.response.to.be.notFound;",
									"})",
									"",
									"pm.test(\"JSON response\", function () {",
									"    pm.response.to.be.json;",
									"    pm.response.to.be.an(\"object\");",
									"    pm.response.to.have.jsonBody(\"success\");",
									"    pm.response.to.have.jsonBody(\"message\");",
									"});",
									"",
									"pm.test(\"JSON response: success\", function () {",
									"    var jsonResponse = pm.response.json();",
									"    pm.expect(jsonResponse.success).to.be.a(\"boolean\");",
									"    pm.expect(jsonResponse.success).to.eql(false);",
									"});",
									"",
									"pm.test(\"JSON response: message\", function () {",
									"    var jsonResponse = pm.response.json();",
									"    pm.expect(jsonResponse.message).to.be.a(\"string\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL_ENDPOINT}}/api/posts/{{NOT_EXISTS}}",
							"host": [
								"{{URL_ENDPOINT}}"
							],
							"path": [
								"api",
								"posts",
								"{{NOT_EXISTS}}"
							]
						}
					},
					"response": [
						{
							"name": "Delete post NOT FOUND",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL_ENDPOINT}}/api/posts/{{NOT_EXISTS}}",
									"host": [
										"{{URL_ENDPOINT}}"
									],
									"path": [
										"api",
										"posts",
										"{{NOT_EXISTS}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Wed, 28 Feb 2024 12:20:47 GMT"
								},
								{
									"key": "Server",
									"value": "Apache/2.4.52 (Ubuntu)"
								},
								{
									"key": "Vary",
									"value": "Authorization"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "60"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "57"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5, max=100"
								},
								{
									"key": "Connection",
									"value": "Keep-Alive"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"message\": \"Post not found\"\n}"
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Places",
			"item": [
				{
					"name": "CLRU Places",
					"item": [
						{
							"name": "Create place",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status 201\", function () {",
											"    pm.response.to.be.success;",
											"    pm.response.to.have.status(201)",
											"})",
											"",
											"pm.test(\"JSON response\", function () {",
											"    pm.response.to.be.json;",
											"    pm.response.to.be.an(\"object\");",
											"    pm.response.to.have.jsonBody(\"success\");",
											"    pm.response.to.have.jsonBody(\"data\");",
											"    pm.response.to.not.have.jsonBody(\"error\");",
											"});",
											"",
											"pm.test(\"JSON response: success\", function () {",
											"    var jsonResponse = pm.response.json();",
											"    pm.expect(jsonResponse.success).to.be.a(\"boolean\");",
											"    pm.expect(jsonResponse.success).to.eql(true);",
											"});",
											"",
											"pm.test(\"JSON response: data\", function () {",
											"    var jsonResponse = pm.response.json();",
											"    pm.expect(jsonResponse.data).to.be.a(\"object\");",
											"    // Store last id to test other web services",
											"    pm.expect(jsonResponse.data).to.have.property(\"id\");",
											"    pm.collectionVariables.set(\"place\", jsonResponse.data.id);",
											"    // Data",
											"    pm.expect(jsonResponse.data).to.have.property(\"name\");",
											"    pm.expect(jsonResponse.data).to.have.property(\"description\");",
											"    pm.expect(jsonResponse.data).to.have.property(\"latitude\");",
											"    pm.expect(jsonResponse.data).to.have.property(\"longitude\");",
											"    pm.expect(jsonResponse.data).to.have.property(\"created_at\");",
											"    pm.expect(jsonResponse.data).to.have.property(\"updated_at\");",
											"    // Relationships",
											"    pm.expect(jsonResponse.data).to.have.any.key(\"file\",\"file_id\");",
											"    pm.expect(jsonResponse.data).to.have.any.key(\"visibility\",\"visibility_id\");",
											"    pm.expect(jsonResponse.data).to.have.any.key(\"author\",\"author_id\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "name",
											"value": "My beatiful place",
											"type": "text"
										},
										{
											"key": "description",
											"value": "Ohhhhhhh. Nice place.",
											"type": "text"
										},
										{
											"key": "upload",
											"type": "file",
											"src": "/home/pep/Imatges/Captura de pantalla de 2023-02-02 17-54-58.png"
										},
										{
											"key": "latitude",
											"value": "1.887",
											"type": "text"
										},
										{
											"key": "longitude",
											"value": "0.444",
											"type": "text"
										},
										{
											"key": "visibility",
											"value": "1",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{URL_ENDPOINT}}/api/places",
									"host": [
										"{{URL_ENDPOINT}}"
									],
									"path": [
										"api",
										"places"
									]
								}
							},
							"response": [
								{
									"name": "Create place",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "name",
													"value": "My beatiful place",
													"type": "text"
												},
												{
													"key": "description",
													"value": "Ohhhhhhh. Nice place.",
													"type": "text"
												},
												{
													"key": "upload",
													"type": "file",
													"src": "/home/pepe/Imatges/56908_425581517509828_138292391_o.jpg"
												},
												{
													"key": "latitude",
													"value": "1.887",
													"type": "text"
												},
												{
													"key": "longitude",
													"value": "0.444",
													"type": "text"
												},
												{
													"key": "visibility",
													"value": "1",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "http://127.0.0.1:8000/api/places/",
											"protocol": "http",
											"host": [
												"127",
												"0",
												"0",
												"1"
											],
											"port": "8000",
											"path": [
												"api",
												"places",
												""
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Host",
											"value": "127.0.0.1:8000"
										},
										{
											"key": "Date",
											"value": "Thu, 08 Dec 2022 19:14:15 GMT"
										},
										{
											"key": "Date",
											"value": "Thu, 08 Dec 2022 19:14:15 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										},
										{
											"key": "X-Powered-By",
											"value": "PHP/8.1.11"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, private"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "60"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "56"
										},
										{
											"key": "phpdebugbar-id",
											"value": "X787521bf164a0ab8751cf57ff79a7ce8"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"data\": {\n        \"id\": 3,\n        \"name\": \"My beatiful place\",\n        \"description\": \"Ohhhhhhh. Nice place.\",\n        \"file\": {\n            \"id\": 10,\n            \"filepath\": \"uploads/1670526855_56908_425581517509828_138292391_o.jpg\",\n            \"filesize\": 233130,\n            \"created_at\": \"2022-12-08T19:14:15.000000Z\",\n            \"updated_at\": \"2022-12-08T19:14:15.000000Z\"\n        },\n        \"latitude\": \"1.887\",\n        \"longitude\": \"0.444\",\n        \"visibility\": {\n            \"id\": 1,\n            \"name\": \"public\"\n        },\n        \"author\": {\n            \"id\": 173,\n            \"name\": \"pep.jimenez\",\n            \"email\": \"pep.jimenez@insjoaquimmir.cat\",\n            \"created_at\": \"2022-12-07T16:14:39.000000Z\",\n            \"updated_at\": \"2022-12-07T16:14:39.000000Z\"\n        },\n        \"created_at\": \"2022-12-08T19:14:15.000000Z\",\n        \"updated_at\": \"2022-12-08T19:14:15.000000Z\",\n        \"favorites_count\": null\n    }\n}"
								}
							]
						},
						{
							"name": "Create place INVALID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status 422\", function () {",
											"    pm.response.to.have.status(422)",
											"})",
											"",
											"pm.test(\"JSON response\", function () {",
											"    pm.response.to.be.json;",
											"    pm.response.to.be.an(\"object\");",
											"    pm.response.to.have.jsonBody(\"message\");",
											"    pm.response.to.have.jsonBody(\"errors\");",
											"});",
											"",
											"pm.test(\"JSON response: message\", function () {",
											"    var jsonResponse = pm.response.json();",
											"    pm.expect(jsonResponse.message).to.be.a(\"string\");",
											"});",
											"",
											"pm.test(\"JSON response: errors\", function () {",
											"    var jsonResponse = pm.response.json();",
											"    pm.expect(jsonResponse.errors).to.be.a(\"object\");",
											"    pm.expect(jsonResponse.errors).to.have.keys(\"name\",\"description\",\"upload\",\"latitude\",\"longitude\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "name",
											"value": "My beatiful place",
											"type": "text",
											"disabled": true
										},
										{
											"key": "description",
											"value": "Ohhhhhhh. Nice place.",
											"type": "text",
											"disabled": true
										},
										{
											"key": "upload",
											"type": "file",
											"src": "/home/pep/Imatges/Captura de pantalla de 2023-02-02 17-54-58.png",
											"disabled": true
										},
										{
											"key": "latitude",
											"value": "1.887",
											"type": "text",
											"disabled": true
										},
										{
											"key": "longitude",
											"value": "0.444",
											"type": "text",
											"disabled": true
										},
										{
											"key": "visibility",
											"value": "1",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{URL_ENDPOINT}}/api/places",
									"host": [
										"{{URL_ENDPOINT}}"
									],
									"path": [
										"api",
										"places"
									]
								}
							},
							"response": [
								{
									"name": "Create place INVALID",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "name",
													"value": "My beatiful place",
													"type": "text",
													"disabled": true
												},
												{
													"key": "description",
													"value": "Ohhhhhhh. Nice place.",
													"type": "text",
													"disabled": true
												},
												{
													"key": "upload",
													"type": "file",
													"src": "/home/pep/Imatges/Captura de pantalla de 2023-02-02 17-54-58.png",
													"disabled": true
												},
												{
													"key": "latitude",
													"value": "1.887",
													"type": "text",
													"disabled": true
												},
												{
													"key": "longitude",
													"value": "0.444",
													"type": "text",
													"disabled": true
												},
												{
													"key": "visibility",
													"value": "1",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{URL_ENDPOINT}}/api/places",
											"host": [
												"{{URL_ENDPOINT}}"
											],
											"path": [
												"api",
												"places"
											]
										}
									},
									"status": "Unprocessable Content",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Wed, 28 Feb 2024 16:11:28 GMT"
										},
										{
											"key": "Server",
											"value": "Apache/2.4.52 (Ubuntu)"
										},
										{
											"key": "Vary",
											"value": "Authorization"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, private"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "60"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "59"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5, max=100"
										},
										{
											"key": "Connection",
											"value": "Keep-Alive"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n    \"message\": \"The name field is required. (and 4 more errors)\",\n    \"errors\": {\n        \"name\": [\n            \"The name field is required.\"\n        ],\n        \"description\": [\n            \"The description field is required.\"\n        ],\n        \"upload\": [\n            \"The upload field is required.\"\n        ],\n        \"latitude\": [\n            \"The latitude field is required.\"\n        ],\n        \"longitude\": [\n            \"The longitude field is required.\"\n        ]\n    }\n}"
								}
							]
						},
						{
							"name": "List places",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const dataSchema = {",
											"    \"type\": \"array\",",
											"    \"items\": [{",
											"        \"type\": \"object\",",
											"        \"properties\":{",
											"            \"id\": {",
											"                \"type\":\"integer\"",
											"            },",
											"            \"name\": {",
											"                \"type\":\"string\"",
											"            },",
											"            \"description\": {",
											"                \"type\":\"string\"",
											"            },",
											"            \"file_id\": {",
											"                \"type\":\"integer\"",
											"            },",
											"            \"file\": {",
											"                \"type\":\"object\"",
											"            },",
											"            \"latitude\": {",
											"                \"type\":\"number\"",
											"            },",
											"            \"longitude\": {",
											"                \"type\":\"number\"",
											"            },",
											"            \"visibility_id\": {",
											"                \"type\":\"integer\"",
											"            },",
											"            \"visibility\": {",
											"                \"type\":\"object\"",
											"            },",
											"            \"author_id\": {",
											"                \"type\":\"integer\"",
											"            },",
											"            \"author\": {",
											"                \"type\":\"object\"",
											"            },                        ",
											"            \"created_at\": {",
											"                \"type\":\"string\"",
											"            },",
											"            \"updated_at\": {",
											"                \"type\":\"string\"",
											"            }",
											"        },",
											"        \"required\": [",
											"            \"id\",",
											"            \"name\",",
											"            \"latitude\",",
											"            \"longitude\"",
											"        ]",
											"    }]",
											"};",
											"",
											"pm.test(\"Status OK\", function () {",
											"    pm.response.to.be.ok;",
											"})",
											"",
											"pm.test(\"JSON response\", function () {",
											"    pm.response.to.be.json;",
											"    pm.response.to.be.an(\"object\");",
											"    pm.response.to.have.jsonBody(\"success\");",
											"    pm.response.to.have.jsonBody(\"data\");",
											"    pm.response.to.not.have.jsonBody(\"error\");",
											"});",
											"",
											"pm.test(\"JSON response: success\", function () {",
											"    var jsonResponse = pm.response.json();",
											"    pm.expect(jsonResponse.success).to.be.a(\"boolean\");",
											"    pm.expect(jsonResponse.success).to.eql(true);",
											"});",
											"",
											"pm.test(\"JSON response: data\", function () {",
											"    var jsonResponse = pm.response.json();",
											"    pm.expect(jsonResponse.data).to.be.an(\"array\");",
											"    pm.expect(tv4.validate(jsonResponse.data, dataSchema)).to.be.true;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL_ENDPOINT}}/api/places?name=beatiful&description=nice&visibility=1",
									"host": [
										"{{URL_ENDPOINT}}"
									],
									"path": [
										"api",
										"places"
									],
									"query": [
										{
											"key": "name",
											"value": "beatiful"
										},
										{
											"key": "description",
											"value": "nice"
										},
										{
											"key": "visibility",
											"value": "1"
										}
									]
								}
							},
							"response": [
								{
									"name": "List places",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{URL_ENDPOINT}}/api/places?name=beatiful&description=nice&visibility=1",
											"host": [
												"{{URL_ENDPOINT}}"
											],
											"path": [
												"api",
												"places"
											],
											"query": [
												{
													"key": "name",
													"value": "beatiful"
												},
												{
													"key": "description",
													"value": "nice"
												},
												{
													"key": "visibility",
													"value": "1"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Fri, 01 Mar 2024 12:00:19 GMT"
										},
										{
											"key": "Server",
											"value": "Apache/2.4.52 (Ubuntu)"
										},
										{
											"key": "Vary",
											"value": "Authorization"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, private"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "60"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "59"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5, max=100"
										},
										{
											"key": "Connection",
											"value": "Keep-Alive"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"data\": [\n        {\n            \"id\": 6,\n            \"name\": \"My beatiful place\",\n            \"description\": \"Ohhhhhhh. Nice place.\",\n            \"file\": {\n                \"id\": 40,\n                \"filepath\": \"uploads/1709136554_Captura de pantalla de 2023-02-02 17-54-58.png\",\n                \"filesize\": 70460,\n                \"created_at\": \"2024-02-28T16:09:14.000000Z\",\n                \"updated_at\": \"2024-02-28T16:09:14.000000Z\"\n            },\n            \"latitude\": 1.887,\n            \"longitude\": 0.444,\n            \"visibility\": {\n                \"id\": 1,\n                \"name\": \"public\"\n            },\n            \"author\": {\n                \"id\": 23,\n                \"name\": \"pep\",\n                \"email\": \"pep.castelltort@insjoaquimmir.cat\",\n                \"created_at\": \"2024-02-27T18:20:08.000000Z\",\n                \"updated_at\": \"2024-02-27T18:20:08.000000Z\"\n            },\n            \"created_at\": \"2024-02-28T16:09:14.000000Z\",\n            \"updated_at\": \"2024-02-28T16:09:14.000000Z\",\n            \"favorites_count\": 0,\n            \"reviews_count\": 0,\n            \"favorited\": false,\n            \"reviewed\": false\n        },\n        {\n            \"id\": 7,\n            \"name\": \"My beatiful place\",\n            \"description\": \"Ohhhhhhh. Nice place.\",\n            \"file\": {\n                \"id\": 41,\n                \"filepath\": \"uploads/1709136874_Captura de pantalla de 2023-02-02 17-54-58.png\",\n                \"filesize\": 70460,\n                \"created_at\": \"2024-02-28T16:14:34.000000Z\",\n                \"updated_at\": \"2024-02-28T16:14:34.000000Z\"\n            },\n            \"latitude\": 1.887,\n            \"longitude\": 0.444,\n            \"visibility\": {\n                \"id\": 1,\n                \"name\": \"public\"\n            },\n            \"author\": {\n                \"id\": 23,\n                \"name\": \"pep\",\n                \"email\": \"pep.castelltort@insjoaquimmir.cat\",\n                \"created_at\": \"2024-02-27T18:20:08.000000Z\",\n                \"updated_at\": \"2024-02-27T18:20:08.000000Z\"\n            },\n            \"created_at\": \"2024-02-28T16:14:34.000000Z\",\n            \"updated_at\": \"2024-02-28T16:14:34.000000Z\",\n            \"favorites_count\": 0,\n            \"reviews_count\": 0,\n            \"favorited\": false,\n            \"reviewed\": false\n        },\n        {\n            \"id\": 12,\n            \"name\": \"My beatiful place\",\n            \"description\": \"Ohhhhhhh. Nice place.\",\n            \"file\": {\n                \"id\": 50,\n                \"filepath\": \"uploads/1709146413_Captura de pantalla de 2023-02-02 17-54-58.png\",\n                \"filesize\": 70460,\n                \"created_at\": \"2024-02-28T18:53:33.000000Z\",\n                \"updated_at\": \"2024-02-28T18:53:33.000000Z\"\n            },\n            \"latitude\": 1.887,\n            \"longitude\": 0.444,\n            \"visibility\": {\n                \"id\": 1,\n                \"name\": \"public\"\n            },\n            \"author\": {\n                \"id\": 23,\n                \"name\": \"pep\",\n                \"email\": \"pep.castelltort@insjoaquimmir.cat\",\n                \"created_at\": \"2024-02-27T18:20:08.000000Z\",\n                \"updated_at\": \"2024-02-27T18:20:08.000000Z\"\n            },\n            \"created_at\": \"2024-02-28T18:53:33.000000Z\",\n            \"updated_at\": \"2024-02-28T18:53:33.000000Z\",\n            \"favorites_count\": 0,\n            \"reviews_count\": 0,\n            \"favorited\": false,\n            \"reviewed\": false\n        },\n        {\n            \"id\": 20,\n            \"name\": \"My beatiful place\",\n            \"description\": \"Ohhhhhhh. Nice place.\",\n            \"file\": {\n                \"id\": 78,\n                \"filepath\": \"uploads/1709294386_Captura de pantalla de 2023-02-02 17-54-58.png\",\n                \"filesize\": 70460,\n                \"created_at\": \"2024-03-01T11:59:46.000000Z\",\n                \"updated_at\": \"2024-03-01T11:59:46.000000Z\"\n            },\n            \"latitude\": 1.887,\n            \"longitude\": 0.444,\n            \"visibility\": {\n                \"id\": 1,\n                \"name\": \"public\"\n            },\n            \"author\": {\n                \"id\": 93,\n                \"name\": \"test_1709293668\",\n                \"email\": \"test_1709293668@xtec.cat\",\n                \"created_at\": \"2024-03-01T11:47:48.000000Z\",\n                \"updated_at\": \"2024-03-01T11:47:48.000000Z\"\n            },\n            \"created_at\": \"2024-03-01T11:59:46.000000Z\",\n            \"updated_at\": \"2024-03-01T11:59:46.000000Z\",\n            \"favorites_count\": 0,\n            \"reviews_count\": 0,\n            \"favorited\": false,\n            \"reviewed\": false\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Read place",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status OK\", function () {",
											"    pm.response.to.be.ok;",
											"})",
											"",
											"pm.test(\"JSON response\", function () {",
											"    pm.response.to.be.json;",
											"    pm.response.to.be.an(\"object\");",
											"    pm.response.to.have.jsonBody(\"success\");",
											"    pm.response.to.have.jsonBody(\"data\");",
											"    pm.response.to.not.have.jsonBody(\"error\");",
											"});",
											"",
											"pm.test(\"JSON response: success\", function () {",
											"    var jsonResponse = pm.response.json();",
											"    pm.expect(jsonResponse.success).to.be.a(\"boolean\");",
											"    pm.expect(jsonResponse.success).to.eql(true);",
											"});",
											"",
											"pm.test(\"JSON response: data\", function () {",
											"    var jsonResponse = pm.response.json();",
											"    pm.expect(jsonResponse.data).to.be.a(\"object\");",
											"    // Data",
											"    pm.expect(jsonResponse.data).to.have.property(\"id\");",
											"    pm.expect(jsonResponse.data).to.have.property(\"name\");",
											"    pm.expect(jsonResponse.data).to.have.property(\"description\");",
											"    pm.expect(jsonResponse.data).to.have.property(\"latitude\");",
											"    pm.expect(jsonResponse.data).to.have.property(\"longitude\");",
											"    pm.expect(jsonResponse.data).to.have.property(\"created_at\");",
											"    pm.expect(jsonResponse.data).to.have.property(\"updated_at\");",
											"    // Relationships",
											"    pm.expect(jsonResponse.data).to.have.any.key(\"file\",\"file_id\");",
											"    pm.expect(jsonResponse.data).to.have.any.key(\"visibility\",\"visibility_id\");",
											"    pm.expect(jsonResponse.data).to.have.any.key(\"author\",\"author_id\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL_ENDPOINT}}/api/places/{{place}}",
									"host": [
										"{{URL_ENDPOINT}}"
									],
									"path": [
										"api",
										"places",
										"{{place}}"
									]
								}
							},
							"response": [
								{
									"name": "Read place",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{URL_ENDPOINT}}/api/places/{{place}}",
											"host": [
												"{{URL_ENDPOINT}}"
											],
											"path": [
												"api",
												"places",
												"{{place}}"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Fri, 01 Mar 2024 12:00:29 GMT"
										},
										{
											"key": "Server",
											"value": "Apache/2.4.52 (Ubuntu)"
										},
										{
											"key": "Vary",
											"value": "Authorization"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, private"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "60"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "58"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5, max=100"
										},
										{
											"key": "Connection",
											"value": "Keep-Alive"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"data\": {\n        \"id\": 20,\n        \"name\": \"My beatiful place\",\n        \"description\": \"Ohhhhhhh. Nice place.\",\n        \"file\": {\n            \"id\": 78,\n            \"filepath\": \"uploads/1709294386_Captura de pantalla de 2023-02-02 17-54-58.png\",\n            \"filesize\": 70460,\n            \"created_at\": \"2024-03-01T11:59:46.000000Z\",\n            \"updated_at\": \"2024-03-01T11:59:46.000000Z\"\n        },\n        \"latitude\": 1.887,\n        \"longitude\": 0.444,\n        \"visibility\": {\n            \"id\": 1,\n            \"name\": \"public\"\n        },\n        \"author\": {\n            \"id\": 93,\n            \"name\": \"test_1709293668\",\n            \"email\": \"test_1709293668@xtec.cat\",\n            \"created_at\": \"2024-03-01T11:47:48.000000Z\",\n            \"updated_at\": \"2024-03-01T11:47:48.000000Z\"\n        },\n        \"created_at\": \"2024-03-01T11:59:46.000000Z\",\n        \"updated_at\": \"2024-03-01T11:59:46.000000Z\",\n        \"favorites_count\": 0,\n        \"reviews_count\": 0,\n        \"favorited\": false,\n        \"reviewed\": false\n    }\n}"
								}
							]
						},
						{
							"name": "Read place NOT FOUND",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status 404\", function () {",
											"    pm.response.to.be.notFound;",
											"})",
											"",
											"pm.test(\"JSON response\", function () {",
											"    pm.response.to.be.json;",
											"    pm.response.to.be.an(\"object\");",
											"    pm.response.to.have.jsonBody(\"success\");",
											"    pm.response.to.have.jsonBody(\"message\");",
											"});",
											"",
											"pm.test(\"JSON response: success\", function () {",
											"    var jsonResponse = pm.response.json();",
											"    pm.expect(jsonResponse.success).to.be.a(\"boolean\");",
											"    pm.expect(jsonResponse.success).to.eql(false);",
											"});",
											"",
											"pm.test(\"JSON response: message\", function () {",
											"    var jsonResponse = pm.response.json();",
											"    pm.expect(jsonResponse.message).to.be.a(\"string\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL_ENDPOINT}}/api/places/{{NOT_EXISTS}}",
									"host": [
										"{{URL_ENDPOINT}}"
									],
									"path": [
										"api",
										"places",
										"{{NOT_EXISTS}}"
									]
								}
							},
							"response": [
								{
									"name": "Get place NOT FOUND",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{URL_ENDPOINT}}/api/places/{{NOT_EXISTS}}",
											"host": [
												"{{URL_ENDPOINT}}"
											],
											"path": [
												"api",
												"places",
												"{{NOT_EXISTS}}"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Wed, 28 Feb 2024 16:15:37 GMT"
										},
										{
											"key": "Server",
											"value": "Apache/2.4.52 (Ubuntu)"
										},
										{
											"key": "Vary",
											"value": "Authorization"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, private"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "60"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "59"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5, max=100"
										},
										{
											"key": "Connection",
											"value": "Keep-Alive"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"message\": \"Place not found\"\n}"
								}
							]
						},
						{
							"name": "Update place",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status OK\", function () {",
											"    pm.response.to.be.ok;",
											"})",
											"",
											"pm.test(\"JSON response\", function () {",
											"    pm.response.to.be.json;",
											"    pm.response.to.be.an(\"object\");",
											"    pm.response.to.have.jsonBody(\"success\");",
											"    pm.response.to.have.jsonBody(\"data\");",
											"    pm.response.to.not.have.jsonBody(\"error\");",
											"});",
											"",
											"pm.test(\"JSON response: success\", function () {",
											"    var jsonResponse = pm.response.json();",
											"    pm.expect(jsonResponse.success).to.be.a(\"boolean\");",
											"    pm.expect(jsonResponse.success).to.eql(true);",
											"});",
											"",
											"pm.test(\"JSON response: data\", function () {",
											"    var jsonResponse = pm.response.json();",
											"    pm.expect(jsonResponse.data).to.be.a(\"object\");",
											"    // Data",
											"    pm.expect(jsonResponse.data).to.have.property(\"id\");",
											"    pm.expect(jsonResponse.data).to.have.property(\"name\");",
											"    pm.expect(jsonResponse.data).to.have.property(\"description\");",
											"    pm.expect(jsonResponse.data).to.have.property(\"latitude\");",
											"    pm.expect(jsonResponse.data).to.have.property(\"longitude\");",
											"    pm.expect(jsonResponse.data).to.have.property(\"created_at\");",
											"    pm.expect(jsonResponse.data).to.have.property(\"updated_at\");",
											"    // Relationships",
											"    pm.expect(jsonResponse.data).to.have.any.key(\"file\",\"file_id\");",
											"    pm.expect(jsonResponse.data).to.have.any.key(\"visibility\",\"visibility_id\");",
											"    pm.expect(jsonResponse.data).to.have.any.key(\"author\",\"author_id\");",
											"});",
											"",
											"pm.test(\"JSON response: data updated\", function () {",
											"    var jsonResponseData = pm.response.json().data;",
											"    pm.expect(jsonResponseData.name).equal(pm.request.body.formdata.get('name'))",
											"    pm.expect(jsonResponseData.description).equal(pm.request.body.formdata.get('description'))",
											"    pm.expect(jsonResponseData.longitude).equal(pm.request.body.formdata.get('longitude'))      ",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "name",
											"value": "Your place",
											"type": "text"
										},
										{
											"key": "description",
											"value": "Awful place",
											"type": "text"
										},
										{
											"key": "latitude",
											"value": "1.222",
											"type": "text",
											"disabled": true
										},
										{
											"key": "longitude",
											"value": "0.222",
											"type": "text"
										},
										{
											"key": "visibility",
											"value": "2",
											"type": "text"
										},
										{
											"key": "upload",
											"type": "file",
											"src": "/home/pepe/Imatges/30-apr-2013-92.jpg",
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{URL_ENDPOINT}}/api/places/{{place}}",
									"host": [
										"{{URL_ENDPOINT}}"
									],
									"path": [
										"api",
										"places",
										"{{place}}"
									]
								}
							},
							"response": [
								{
									"name": "Update place",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "name",
													"value": "Your place",
													"type": "text"
												},
												{
													"key": "description",
													"value": "Awful place",
													"type": "text"
												},
												{
													"key": "latitude",
													"value": "1.222",
													"type": "text"
												},
												{
													"key": "longitude",
													"value": "0.222",
													"type": "text"
												},
												{
													"key": "visibility",
													"value": "2",
													"type": "text"
												},
												{
													"key": "upload",
													"type": "file",
													"src": "/home/pepe/Imatges/30-apr-2013-92.jpg",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "{{URL_ENDPOINT}}/api/places/{{place}}",
											"host": [
												"{{URL_ENDPOINT}}"
											],
											"path": [
												"api",
												"places",
												"{{place}}"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Wed, 28 Feb 2024 16:21:36 GMT"
										},
										{
											"key": "Server",
											"value": "Apache/2.4.52 (Ubuntu)"
										},
										{
											"key": "Vary",
											"value": "Authorization"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, private"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "60"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "59"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5, max=100"
										},
										{
											"key": "Connection",
											"value": "Keep-Alive"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"data\": {\n        \"id\": 8,\n        \"name\": \"Your place\",\n        \"description\": \"Awful place\",\n        \"file\": {\n            \"id\": 42,\n            \"filepath\": \"uploads/1709136890_Captura de pantalla de 2023-02-02 17-54-58.png\",\n            \"filesize\": 70460,\n            \"created_at\": \"2024-02-28T16:14:50.000000Z\",\n            \"updated_at\": \"2024-02-28T16:14:50.000000Z\"\n        },\n        \"latitude\": \"1.222\",\n        \"longitude\": \"0.222\",\n        \"visibility\": {\n            \"id\": 2,\n            \"name\": \"contacts\"\n        },\n        \"author\": {\n            \"id\": 23,\n            \"name\": \"pep\",\n            \"email\": \"pep.castelltort@insjoaquimmir.cat\",\n            \"created_at\": \"2024-02-27T18:20:08.000000Z\",\n            \"updated_at\": \"2024-02-27T18:20:08.000000Z\"\n        },\n        \"created_at\": \"2024-02-28T16:14:50.000000Z\",\n        \"updated_at\": \"2024-02-28T16:20:34.000000Z\",\n        \"favorites_count\": null,\n        \"reviews_count\": null\n    }\n}"
								}
							]
						},
						{
							"name": "Update place INVALID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status 422\", function () {",
											"    pm.response.to.have.status(422)",
											"})",
											"",
											"pm.test(\"JSON response\", function () {",
											"    pm.response.to.be.json;",
											"    pm.response.to.be.an(\"object\");",
											"    pm.response.to.have.jsonBody(\"message\");",
											"    pm.response.to.have.jsonBody(\"errors\");",
											"});",
											"",
											"pm.test(\"JSON response: message\", function () {",
											"    var jsonResponse = pm.response.json();",
											"    pm.expect(jsonResponse.message).to.be.a(\"string\");",
											"});",
											"",
											"pm.test(\"JSON response: errors\", function () {",
											"    var jsonResponse = pm.response.json();",
											"    pm.expect(jsonResponse.errors).to.be.a(\"object\");",
											"    pm.expect(jsonResponse.errors).to.have.key(\"latitude\",\"visibility\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "name",
											"value": "Your place",
											"type": "text",
											"disabled": true
										},
										{
											"key": "description",
											"value": "Awful place",
											"type": "text",
											"disabled": true
										},
										{
											"key": "latitude",
											"value": "error",
											"type": "text"
										},
										{
											"key": "longitude",
											"value": "0.222",
											"type": "text",
											"disabled": true
										},
										{
											"key": "visibility",
											"value": "error",
											"type": "text"
										},
										{
											"key": "upload",
											"type": "file",
											"src": "/home/pepe/Imatges/30-apr-2013-92.jpg",
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{URL_ENDPOINT}}/api/places/{{place}}",
									"host": [
										"{{URL_ENDPOINT}}"
									],
									"path": [
										"api",
										"places",
										"{{place}}"
									]
								}
							},
							"response": [
								{
									"name": "Update place INVALID",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "name",
													"value": "Your place",
													"type": "text",
													"disabled": true
												},
												{
													"key": "description",
													"value": "Awful place",
													"type": "text",
													"disabled": true
												},
												{
													"key": "latitude",
													"value": "error",
													"type": "text"
												},
												{
													"key": "longitude",
													"value": "0.222",
													"type": "text",
													"disabled": true
												},
												{
													"key": "visibility",
													"value": "error",
													"type": "text"
												},
												{
													"key": "upload",
													"type": "file",
													"src": "/home/pepe/Imatges/30-apr-2013-92.jpg",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "{{URL_ENDPOINT}}/api/places/{{place}}",
											"host": [
												"{{URL_ENDPOINT}}"
											],
											"path": [
												"api",
												"places",
												"{{place}}"
											]
										}
									},
									"status": "Unprocessable Content",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Wed, 28 Feb 2024 18:40:34 GMT"
										},
										{
											"key": "Server",
											"value": "Apache/2.4.52 (Ubuntu)"
										},
										{
											"key": "Vary",
											"value": "Authorization"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, private"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "60"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "58"
										},
										{
											"key": "phpdebugbar-id",
											"value": "X54d2579d0b003e24f7e675c31ff531a3"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5, max=100"
										},
										{
											"key": "Connection",
											"value": "Keep-Alive"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n    \"message\": \"The latitude must be a number. (and 1 more error)\",\n    \"errors\": {\n        \"latitude\": [\n            \"The latitude must be a number.\"\n        ],\n        \"visibility\": [\n            \"The visibility must be an integer.\"\n        ]\n    }\n}"
								}
							]
						}
					]
				},
				{
					"name": "Favorites",
					"item": [
						{
							"name": "Favorite place",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status OK\", function () {",
											"    pm.response.to.be.ok;",
											"})",
											"",
											"pm.test(\"JSON response\", function () {",
											"    pm.response.to.be.json;",
											"    pm.response.to.be.an(\"object\");",
											"    pm.response.to.have.jsonBody(\"success\");",
											"    pm.response.to.have.jsonBody(\"data\");",
											"    pm.response.to.not.have.jsonBody(\"error\");",
											"});",
											"",
											"pm.test(\"JSON response: success\", function () {",
											"    var jsonResponse = pm.response.json();",
											"    pm.expect(jsonResponse.success).to.be.a(\"boolean\");",
											"    pm.expect(jsonResponse.success).to.eql(true);",
											"});",
											"",
											"pm.test(\"JSON response: data\", function () {",
											"    var jsonResponse = pm.response.json();",
											"    pm.expect(jsonResponse.data).to.be.a(\"object\");",
											"    // Data",
											"    pm.expect(jsonResponse.data).to.have.property(\"id\");",
											"    // Relationships",
											"    pm.expect(jsonResponse.data).to.have.any.key(\"user\",\"user_id\");",
											"    pm.expect(jsonResponse.data).to.have.any.key(\"place\",\"place_id\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL_ENDPOINT}}/api/places/{{place}}/favorites",
									"host": [
										"{{URL_ENDPOINT}}"
									],
									"path": [
										"api",
										"places",
										"{{place}}",
										"favorites"
									]
								}
							},
							"response": [
								{
									"name": "Favorite place",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{URL_ENDPOINT}}/api/places/{{place}}/favorites",
											"host": [
												"{{URL_ENDPOINT}}"
											],
											"path": [
												"api",
												"places",
												"{{place}}",
												"favorites"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Host",
											"value": "127.0.0.1:8000"
										},
										{
											"key": "Date",
											"value": "Thu, 08 Dec 2022 19:15:02 GMT"
										},
										{
											"key": "Date",
											"value": "Thu, 08 Dec 2022 19:15:02 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										},
										{
											"key": "X-Powered-By",
											"value": "PHP/8.1.11"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, private"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "60"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "59"
										},
										{
											"key": "phpdebugbar-id",
											"value": "Xd7fbd1ac6c08e855724d25edff28c606"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"data\": {\n        \"user_id\": 173,\n        \"place_id\": \"2\",\n        \"id\": 2\n    }\n}"
								}
							]
						},
						{
							"name": "Favorite place ERROR",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status 400\", function () {",
											"    pm.response.to.be.badRequest;",
											"})",
											"",
											"pm.test(\"JSON response\", function () {",
											"    pm.response.to.be.json;",
											"    pm.response.to.be.an(\"object\");",
											"    pm.response.to.have.jsonBody(\"success\");",
											"    pm.response.to.have.jsonBody(\"message\");",
											"});",
											"",
											"pm.test(\"JSON response: success\", function () {",
											"    var jsonResponse = pm.response.json();",
											"    pm.expect(jsonResponse.success).to.be.a(\"boolean\");",
											"    pm.expect(jsonResponse.success).to.eql(false);",
											"});",
											"",
											"pm.test(\"JSON response: message\", function () {",
											"    var jsonResponse = pm.response.json();",
											"    pm.expect(jsonResponse.message).to.be.a(\"string\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL_ENDPOINT}}/api/places/{{place}}/favorites",
									"host": [
										"{{URL_ENDPOINT}}"
									],
									"path": [
										"api",
										"places",
										"{{place}}",
										"favorites"
									]
								}
							},
							"response": [
								{
									"name": "Favorite place ERROR",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{URL_ENDPOINT}}/api/places/{{place}}/favorites",
											"host": [
												"{{URL_ENDPOINT}}"
											],
											"path": [
												"api",
												"places",
												"{{place}}",
												"favorites"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Host",
											"value": "127.0.0.1:8000"
										},
										{
											"key": "Date",
											"value": "Thu, 08 Dec 2022 19:15:10 GMT"
										},
										{
											"key": "Date",
											"value": "Thu, 08 Dec 2022 19:15:10 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										},
										{
											"key": "X-Powered-By",
											"value": "PHP/8.1.11"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, private"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "60"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "58"
										},
										{
											"key": "phpdebugbar-id",
											"value": "X7489247dd457cc663e9d031351c2e275"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"message\": \"Favorite already exists\"\n}"
								}
							]
						},
						{
							"name": "Unfavorite place",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status OK\", function () {",
											"    pm.response.to.be.ok;",
											"})",
											"",
											"pm.test(\"JSON response\", function () {",
											"    pm.response.to.be.json;",
											"    pm.response.to.be.an(\"object\");",
											"    pm.response.to.have.jsonBody(\"success\");",
											"    pm.response.to.have.jsonBody(\"data\");",
											"    pm.response.to.not.have.jsonBody(\"error\");",
											"});",
											"",
											"pm.test(\"JSON response: success\", function () {",
											"    var jsonResponse = pm.response.json();",
											"    pm.expect(jsonResponse.success).to.be.a(\"boolean\");",
											"    pm.expect(jsonResponse.success).to.eql(true);",
											"});",
											"",
											"pm.test(\"JSON response: data\", function () {",
											"    var jsonResponse = pm.response.json();",
											"    pm.expect(jsonResponse.data).to.be.a(\"object\");",
											"    // Data",
											"    pm.expect(jsonResponse.data).to.have.property(\"id\");",
											"    // Relationships",
											"    pm.expect(jsonResponse.data).to.have.any.key(\"user\",\"user_id\");",
											"    pm.expect(jsonResponse.data).to.have.any.key(\"place\",\"place_id\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL_ENDPOINT}}/api/places/{{place}}/favorites",
									"host": [
										"{{URL_ENDPOINT}}"
									],
									"path": [
										"api",
										"places",
										"{{place}}",
										"favorites"
									]
								}
							},
							"response": [
								{
									"name": "Unfavorite place",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{URL_ENDPOINT}}/api/places/{{place}}/favorites",
											"host": [
												"{{URL_ENDPOINT}}"
											],
											"path": [
												"api",
												"places",
												"{{place}}",
												"favorites"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Host",
											"value": "127.0.0.1:8000"
										},
										{
											"key": "Date",
											"value": "Thu, 08 Dec 2022 19:15:25 GMT"
										},
										{
											"key": "Date",
											"value": "Thu, 08 Dec 2022 19:15:25 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										},
										{
											"key": "X-Powered-By",
											"value": "PHP/8.1.11"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, private"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "60"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "57"
										},
										{
											"key": "phpdebugbar-id",
											"value": "X64a8438915fed5438eed6d97b8e6f57a"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"data\": {\n        \"id\": 2,\n        \"user_id\": 173,\n        \"place_id\": 2\n    }\n}"
								}
							]
						},
						{
							"name": "Unfavorite place ERROR",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status 400 or 404\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([400,404]);",
											"})",
											"",
											"pm.test(\"JSON response\", function () {",
											"    pm.response.to.be.json;",
											"    pm.response.to.be.an(\"object\");",
											"    pm.response.to.have.jsonBody(\"success\");",
											"    pm.response.to.have.jsonBody(\"message\");",
											"});",
											"",
											"pm.test(\"JSON response: success\", function () {",
											"    var jsonResponse = pm.response.json();",
											"    pm.expect(jsonResponse.success).to.be.a(\"boolean\");",
											"    pm.expect(jsonResponse.success).to.eql(false);",
											"});",
											"",
											"pm.test(\"JSON response: message\", function () {",
											"    var jsonResponse = pm.response.json();",
											"    pm.expect(jsonResponse.message).to.be.a(\"string\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL_ENDPOINT}}/api/places/{{place}}/favorites",
									"host": [
										"{{URL_ENDPOINT}}"
									],
									"path": [
										"api",
										"places",
										"{{place}}",
										"favorites"
									]
								}
							},
							"response": [
								{
									"name": "Unfavorite place ERROR",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{URL_ENDPOINT}}/api/places/{{place}}/favorites",
											"host": [
												"{{URL_ENDPOINT}}"
											],
											"path": [
												"api",
												"places",
												"{{place}}",
												"favorites"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Host",
											"value": "127.0.0.1:8000"
										},
										{
											"key": "Date",
											"value": "Thu, 08 Dec 2022 19:15:30 GMT"
										},
										{
											"key": "Date",
											"value": "Thu, 08 Dec 2022 19:15:30 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										},
										{
											"key": "X-Powered-By",
											"value": "PHP/8.1.11"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, private"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "60"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "56"
										},
										{
											"key": "phpdebugbar-id",
											"value": "Xdea5613e752ead97ac92d4f4a9e6a201"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"message\": \"Favorite not exists\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Reviews",
					"item": [
						{
							"name": "Create review",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status 201\", function () {",
											"    pm.response.to.be.success;",
											"    pm.response.to.have.status(201)",
											"})",
											"",
											"pm.test(\"JSON response\", function () {",
											"    pm.response.to.be.json;",
											"    pm.response.to.be.an(\"object\");",
											"    pm.response.to.have.jsonBody(\"success\");",
											"    pm.response.to.have.jsonBody(\"data\");",
											"    pm.response.to.not.have.jsonBody(\"error\");",
											"});",
											"",
											"pm.test(\"JSON response: success\", function () {",
											"    var jsonResponse = pm.response.json();",
											"    pm.expect(jsonResponse.success).to.be.a(\"boolean\");",
											"    pm.expect(jsonResponse.success).to.eql(true);",
											"});",
											"",
											"pm.test(\"JSON response: data\", function () {",
											"    var jsonResponse = pm.response.json();",
											"    pm.expect(jsonResponse.data).to.be.a(\"object\");",
											"    // Store last id to test other web services",
											"    pm.expect(jsonResponse.data).to.have.property(\"id\");",
											"    pm.collectionVariables.set(\"review\", jsonResponse.data.id);",
											"    // Data",
											"    pm.expect(jsonResponse.data).to.have.property(\"review\");",
											"    // Relationships",
											"    pm.expect(jsonResponse.data).to.have.any.key(\"user\",\"user_id\",\"author\",\"author_id\");",
											"    pm.expect(jsonResponse.data).to.have.any.key(\"place\",\"place_id\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"review\": \"This place is amazing!\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL_ENDPOINT}}/api/places/{{place}}/reviews",
									"host": [
										"{{URL_ENDPOINT}}"
									],
									"path": [
										"api",
										"places",
										"{{place}}",
										"reviews"
									]
								}
							},
							"response": [
								{
									"name": "Create review",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"review\": \"This place is amazing!\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{URL_ENDPOINT}}/api/places/{{place}}/reviews",
											"host": [
												"{{URL_ENDPOINT}}"
											],
											"path": [
												"api",
												"places",
												"{{place}}",
												"reviews"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Wed, 28 Feb 2024 18:53:38 GMT"
										},
										{
											"key": "Server",
											"value": "Apache/2.4.52 (Ubuntu)"
										},
										{
											"key": "Vary",
											"value": "Authorization"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, private"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "60"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "57"
										},
										{
											"key": "phpdebugbar-id",
											"value": "X50228e08c059bdc7e157246c0b68fa33"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5, max=99"
										},
										{
											"key": "Connection",
											"value": "Keep-Alive"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"data\": {\n        \"id\": 3,\n        \"review\": \"This place is amazing!\",\n        \"place\": {\n            \"id\": 12,\n            \"name\": \"My beatiful place\",\n            \"description\": \"Ohhhhhhh. Nice place.\",\n            \"file\": {\n                \"id\": 50,\n                \"filepath\": \"uploads/1709146413_Captura de pantalla de 2023-02-02 17-54-58.png\",\n                \"filesize\": 70460,\n                \"created_at\": \"2024-02-28T18:53:33.000000Z\",\n                \"updated_at\": \"2024-02-28T18:53:33.000000Z\"\n            },\n            \"latitude\": 1.887,\n            \"longitude\": 0.444,\n            \"visibility\": {\n                \"id\": 1,\n                \"name\": \"public\"\n            },\n            \"author\": {\n                \"id\": 23,\n                \"name\": \"pep\",\n                \"email\": \"pep.castelltort@insjoaquimmir.cat\",\n                \"created_at\": \"2024-02-27T18:20:08.000000Z\",\n                \"updated_at\": \"2024-02-27T18:20:08.000000Z\"\n            },\n            \"created_at\": \"2024-02-28T18:53:33.000000Z\",\n            \"updated_at\": \"2024-02-28T18:53:33.000000Z\",\n            \"favorites_count\": null,\n            \"reviews_count\": null\n        },\n        \"user\": {\n            \"id\": 23,\n            \"name\": \"pep\",\n            \"email\": \"pep.castelltort@insjoaquimmir.cat\",\n            \"created_at\": \"2024-02-27T18:20:08.000000Z\",\n            \"updated_at\": \"2024-02-27T18:20:08.000000Z\"\n        },\n        \"created_at\": \"2024-02-28T18:53:38.000000Z\",\n        \"updated_at\": \"2024-02-28T18:53:38.000000Z\"\n    }\n}"
								}
							]
						},
						{
							"name": "Create review ERROR",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status 400\", function () {",
											"    pm.response.to.be.badRequest;",
											"})",
											"",
											"pm.test(\"JSON response\", function () {",
											"    pm.response.to.be.json;",
											"    pm.response.to.be.an(\"object\");",
											"    pm.response.to.have.jsonBody(\"success\");",
											"    pm.response.to.have.jsonBody(\"message\");",
											"});",
											"",
											"pm.test(\"JSON response: success\", function () {",
											"    var jsonResponse = pm.response.json();",
											"    pm.expect(jsonResponse.success).to.be.a(\"boolean\");",
											"    pm.expect(jsonResponse.success).to.eql(false);",
											"});",
											"",
											"pm.test(\"JSON response: message\", function () {",
											"    var jsonResponse = pm.response.json();",
											"    pm.expect(jsonResponse.message).to.be.a(\"string\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"review\": \"This place is amazing!\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL_ENDPOINT}}/api/places/{{place}}/reviews",
									"host": [
										"{{URL_ENDPOINT}}"
									],
									"path": [
										"api",
										"places",
										"{{place}}",
										"reviews"
									]
								}
							},
							"response": [
								{
									"name": "Create review ERROR",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"review\": \"This place is awesome!\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{URL_ENDPOINT}}/api/places/{{place}}/reviews",
											"host": [
												"{{URL_ENDPOINT}}"
											],
											"path": [
												"api",
												"places",
												"{{place}}",
												"reviews"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Host",
											"value": "127.0.0.1:8000"
										},
										{
											"key": "Date",
											"value": "Sat, 10 Dec 2022 19:16:58 GMT"
										},
										{
											"key": "Date",
											"value": "Sat, 10 Dec 2022 19:16:58 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										},
										{
											"key": "X-Powered-By",
											"value": "PHP/8.1.11"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, private"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "60"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "58"
										},
										{
											"key": "phpdebugbar-id",
											"value": "X51ce1c821ab37b5c57bd0e1b90b5fde2"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"message\": \"Review already created\"\n}"
								}
							]
						},
						{
							"name": "List reviews",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const dataSchema = {",
											"    \"type\": \"array\",",
											"    \"items\": [{",
											"        \"type\": \"object\",",
											"        \"properties\":{",
											"            \"id\": {",
											"                \"type\":\"integer\"",
											"            },",
											"            \"review\": {",
											"                \"type\":\"string\"",
											"            },",
											"            \"place_id\": {",
											"                \"type\":\"integer\"",
											"            },",
											"            \"place\": {",
											"                \"type\":\"object\"",
											"            },",
											"            \"user_id\": {",
											"                \"type\":\"integer\"",
											"            },",
											"            \"user\": {",
											"                \"type\":\"object\"",
											"            },",
											"            \"author_id\": {",
											"                \"type\":\"integer\"",
											"            },",
											"            \"author\": {",
											"                \"type\":\"object\"",
											"            },                        ",
											"            \"created_at\": {",
											"                \"type\":\"string\"",
											"            },",
											"            \"updated_at\": {",
											"                \"type\":\"string\"",
											"            }",
											"        },",
											"        \"required\": [",
											"            \"id\",",
											"            \"review\"",
											"        ]",
											"    }]",
											"};",
											"",
											"pm.test(\"Status OK\", function () {",
											"    pm.response.to.be.ok;",
											"})",
											"",
											"pm.test(\"JSON response\", function () {",
											"    pm.response.to.be.json;",
											"    pm.response.to.be.an(\"object\");",
											"    pm.response.to.have.jsonBody(\"success\");",
											"    pm.response.to.have.jsonBody(\"data\");",
											"    pm.response.to.not.have.jsonBody(\"error\");",
											"});",
											"",
											"pm.test(\"JSON response: success\", function () {",
											"    var jsonResponse = pm.response.json();",
											"    pm.expect(jsonResponse.success).to.be.a(\"boolean\");",
											"    pm.expect(jsonResponse.success).to.eql(true);",
											"});",
											"",
											"pm.test(\"JSON response: data\", function () {",
											"    var jsonResponse = pm.response.json();",
											"    pm.expect(jsonResponse.data).to.be.an(\"array\");",
											"    pm.expect(tv4.validate(jsonResponse.data, dataSchema)).to.be.true;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL_ENDPOINT}}/api/places/{{place}}/reviews",
									"host": [
										"{{URL_ENDPOINT}}"
									],
									"path": [
										"api",
										"places",
										"{{place}}",
										"reviews"
									]
								}
							},
							"response": [
								{
									"name": "List reviews",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{URL_ENDPOINT}}/api/places/{{place}}/reviews",
											"host": [
												"{{URL_ENDPOINT}}"
											],
											"path": [
												"api",
												"places",
												"{{place}}",
												"reviews"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Wed, 28 Feb 2024 18:55:15 GMT"
										},
										{
											"key": "Server",
											"value": "Apache/2.4.52 (Ubuntu)"
										},
										{
											"key": "Vary",
											"value": "Authorization"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, private"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "60"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "57"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5, max=100"
										},
										{
											"key": "Connection",
											"value": "Keep-Alive"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"data\": [\n        {\n            \"id\": 3,\n            \"review\": \"This place is amazing!\",\n            \"place\": {\n                \"id\": 12,\n                \"name\": \"My beatiful place\",\n                \"description\": \"Ohhhhhhh. Nice place.\",\n                \"file\": {\n                    \"id\": 50,\n                    \"filepath\": \"uploads/1709146413_Captura de pantalla de 2023-02-02 17-54-58.png\",\n                    \"filesize\": 70460,\n                    \"created_at\": \"2024-02-28T18:53:33.000000Z\",\n                    \"updated_at\": \"2024-02-28T18:53:33.000000Z\"\n                },\n                \"latitude\": 1.887,\n                \"longitude\": 0.444,\n                \"visibility\": {\n                    \"id\": 1,\n                    \"name\": \"public\"\n                },\n                \"author\": {\n                    \"id\": 23,\n                    \"name\": \"pep\",\n                    \"email\": \"pep.castelltort@insjoaquimmir.cat\",\n                    \"created_at\": \"2024-02-27T18:20:08.000000Z\",\n                    \"updated_at\": \"2024-02-27T18:20:08.000000Z\"\n                },\n                \"created_at\": \"2024-02-28T18:53:33.000000Z\",\n                \"updated_at\": \"2024-02-28T18:53:33.000000Z\",\n                \"favorites_count\": null,\n                \"reviews_count\": null\n            },\n            \"user\": {\n                \"id\": 23,\n                \"name\": \"pep\",\n                \"email\": \"pep.castelltort@insjoaquimmir.cat\",\n                \"created_at\": \"2024-02-27T18:20:08.000000Z\",\n                \"updated_at\": \"2024-02-27T18:20:08.000000Z\"\n            },\n            \"created_at\": \"2024-02-28T18:53:38.000000Z\",\n            \"updated_at\": \"2024-02-28T18:53:38.000000Z\"\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Delete review",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status OK\", function () {",
											"    pm.response.to.be.ok;",
											"})",
											"",
											"pm.test(\"JSON response\", function () {",
											"    pm.response.to.be.json;",
											"    pm.response.to.be.an(\"object\");",
											"    pm.response.to.have.jsonBody(\"success\");",
											"    pm.response.to.have.jsonBody(\"data\");",
											"    pm.response.to.not.have.jsonBody(\"error\");",
											"});",
											"",
											"pm.test(\"JSON response: success\", function () {",
											"    var jsonResponse = pm.response.json();",
											"    pm.expect(jsonResponse.success).to.be.a(\"boolean\");",
											"    pm.expect(jsonResponse.success).to.eql(true);",
											"});",
											"",
											"pm.test(\"JSON response: data\", function () {",
											"    var jsonResponse = pm.response.json();",
											"    pm.expect(jsonResponse.data).to.be.a(\"object\");",
											"    // Data",
											"    pm.expect(jsonResponse.data).to.have.property(\"id\");",
											"    pm.expect(jsonResponse.data).to.have.property(\"review\");",
											"    // Relationships",
											"    pm.expect(jsonResponse.data).to.have.any.key(\"user\",\"user_id\",\"author\",\"author_id\");",
											"    pm.expect(jsonResponse.data).to.have.any.key(\"place\",\"place_id\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL_ENDPOINT}}/api/places/{{place}}/reviews/{{review}}",
									"host": [
										"{{URL_ENDPOINT}}"
									],
									"path": [
										"api",
										"places",
										"{{place}}",
										"reviews",
										"{{review}}"
									]
								}
							},
							"response": [
								{
									"name": "Delete review",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{URL_ENDPOINT}}/api/places/{{place}}/reviews/{{review}}",
											"host": [
												"{{URL_ENDPOINT}}"
											],
											"path": [
												"api",
												"places",
												"{{place}}",
												"reviews",
												"{{review}}"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Host",
											"value": "127.0.0.1:8000"
										},
										{
											"key": "Date",
											"value": "Sat, 10 Dec 2022 19:20:03 GMT"
										},
										{
											"key": "Date",
											"value": "Sat, 10 Dec 2022 19:20:03 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										},
										{
											"key": "X-Powered-By",
											"value": "PHP/8.1.11"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, private"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "60"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "59"
										},
										{
											"key": "phpdebugbar-id",
											"value": "Xddd42f28019c22a85edb7fd6d4984d32"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"data\": {\n        \"id\": 1,\n        \"review\": \"Prova!\",\n        \"place\": {\n            \"id\": 2,\n            \"name\": \"My beatiful place\",\n            \"description\": \"Ohhhhhhh. Nice place.\",\n            \"file\": {\n                \"id\": 7,\n                \"filepath\": \"uploads/1670439559_15m-love.png\",\n                \"filesize\": 271691,\n                \"created_at\": \"2022-12-07T18:59:19.000000Z\",\n                \"updated_at\": \"2022-12-07T18:59:19.000000Z\"\n            },\n            \"latitude\": 1.887,\n            \"longitude\": 0.444,\n            \"visibility\": {\n                \"id\": 1,\n                \"name\": \"public\"\n            },\n            \"author\": {\n                \"id\": 171,\n                \"name\": \"test_1670425495\",\n                \"email\": \"test_1670425495@xtec.cat\",\n                \"created_at\": \"2022-12-07T15:04:55.000000Z\",\n                \"updated_at\": \"2022-12-07T15:04:55.000000Z\"\n            },\n            \"created_at\": \"2022-12-07T18:59:19.000000Z\",\n            \"updated_at\": \"2022-12-07T18:59:19.000000Z\",\n            \"favorites_count\": null\n        },\n        \"user\": {\n            \"id\": 173,\n            \"name\": \"pep.jimenez\",\n            \"email\": \"pep.jimenez@insjoaquimmir.cat\",\n            \"created_at\": \"2022-12-07T16:14:39.000000Z\",\n            \"updated_at\": \"2022-12-07T16:14:39.000000Z\"\n        },\n        \"created_at\": \"2022-12-10T19:02:26.000000Z\",\n        \"updated_at\": \"2022-12-10T19:02:26.000000Z\"\n    }\n}"
								}
							]
						},
						{
							"name": "Delete review NOT FOUND",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status 404\", function () {",
											"    pm.response.to.be.notFound;",
											"})",
											"",
											"pm.test(\"JSON response\", function () {",
											"    pm.response.to.be.json;",
											"    pm.response.to.be.an(\"object\");",
											"    pm.response.to.have.jsonBody(\"success\");",
											"    pm.response.to.have.jsonBody(\"message\");",
											"});",
											"",
											"pm.test(\"JSON response: success\", function () {",
											"    var jsonResponse = pm.response.json();",
											"    pm.expect(jsonResponse.success).to.be.a(\"boolean\");",
											"    pm.expect(jsonResponse.success).to.eql(false);",
											"});",
											"",
											"pm.test(\"JSON response: message\", function () {",
											"    var jsonResponse = pm.response.json();",
											"    pm.expect(jsonResponse.message).to.be.a(\"string\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL_ENDPOINT}}/api/places/{{place}}/reviews/{{NOT_EXISTS}}",
									"host": [
										"{{URL_ENDPOINT}}"
									],
									"path": [
										"api",
										"places",
										"{{place}}",
										"reviews",
										"{{NOT_EXISTS}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Delete place",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status OK\", function () {",
									"    pm.response.to.be.ok;",
									"})",
									"",
									"pm.test(\"JSON response\", function () {",
									"    pm.response.to.be.json;",
									"    pm.response.to.be.an(\"object\");",
									"    pm.response.to.have.jsonBody(\"success\");",
									"    pm.response.to.have.jsonBody(\"data\");",
									"    pm.response.to.not.have.jsonBody(\"error\");",
									"});",
									"",
									"pm.test(\"JSON response: success\", function () {",
									"    var jsonResponse = pm.response.json();",
									"    pm.expect(jsonResponse.success).to.be.a(\"boolean\");",
									"    pm.expect(jsonResponse.success).to.eql(true);",
									"});",
									"",
									"pm.test(\"JSON response: data\", function () {",
									"    var jsonResponse = pm.response.json();",
									"    pm.expect(jsonResponse.data).to.be.a(\"object\");",
									"    // Data",
									"    pm.expect(jsonResponse.data).to.have.property(\"id\");",
									"    pm.expect(jsonResponse.data).to.have.property(\"name\");",
									"    pm.expect(jsonResponse.data).to.have.property(\"description\");",
									"    pm.expect(jsonResponse.data).to.have.property(\"latitude\");",
									"    pm.expect(jsonResponse.data).to.have.property(\"longitude\");",
									"    pm.expect(jsonResponse.data).to.have.property(\"created_at\");",
									"    pm.expect(jsonResponse.data).to.have.property(\"updated_at\");",
									"    // Relationships",
									"    pm.expect(jsonResponse.data).to.have.any.key(\"file\",\"file_id\");",
									"    pm.expect(jsonResponse.data).to.have.any.key(\"visibility\",\"visibility_id\");",
									"    pm.expect(jsonResponse.data).to.have.any.key(\"author\",\"author_id\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL_ENDPOINT}}/api/places/{{place}}",
							"host": [
								"{{URL_ENDPOINT}}"
							],
							"path": [
								"api",
								"places",
								"{{place}}"
							]
						}
					},
					"response": [
						{
							"name": "Delete place",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL_ENDPOINT}}/api/places/{{place}}",
									"host": [
										"{{URL_ENDPOINT}}"
									],
									"path": [
										"api",
										"places",
										"{{place}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Wed, 28 Feb 2024 18:41:13 GMT"
								},
								{
									"key": "Server",
									"value": "Apache/2.4.52 (Ubuntu)"
								},
								{
									"key": "Vary",
									"value": "Authorization"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "60"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "59"
								},
								{
									"key": "phpdebugbar-id",
									"value": "Xa1c26127691080aec2d47cb06ff5d191"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5, max=100"
								},
								{
									"key": "Connection",
									"value": "Keep-Alive"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"data\": {\n        \"id\": 9,\n        \"name\": \"Your place\",\n        \"description\": \"Awful place\",\n        \"file\": {\n            \"id\": 45,\n            \"filepath\": \"uploads/1709145200_Captura de pantalla de 2023-02-02 17-54-58.png\",\n            \"filesize\": 70460,\n            \"created_at\": \"2024-02-28T18:33:20.000000Z\",\n            \"updated_at\": \"2024-02-28T18:33:20.000000Z\"\n        },\n        \"latitude\": 1.222,\n        \"longitude\": 0.222,\n        \"visibility\": {\n            \"id\": 2,\n            \"name\": \"contacts\"\n        },\n        \"author\": {\n            \"id\": 23,\n            \"name\": \"pep\",\n            \"email\": \"pep.castelltort@insjoaquimmir.cat\",\n            \"created_at\": \"2024-02-27T18:20:08.000000Z\",\n            \"updated_at\": \"2024-02-27T18:20:08.000000Z\"\n        },\n        \"created_at\": \"2024-02-28T18:33:20.000000Z\",\n        \"updated_at\": \"2024-02-28T18:38:01.000000Z\",\n        \"favorites_count\": null,\n        \"reviews_count\": null\n    }\n}"
						}
					]
				},
				{
					"name": "Delete place NOT FOUND",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status 404\", function () {",
									"    pm.response.to.be.notFound;",
									"})",
									"",
									"pm.test(\"JSON response\", function () {",
									"    pm.response.to.be.json;",
									"    pm.response.to.be.an(\"object\");",
									"    pm.response.to.have.jsonBody(\"success\");",
									"    pm.response.to.have.jsonBody(\"message\");",
									"});",
									"",
									"pm.test(\"JSON response: success\", function () {",
									"    var jsonResponse = pm.response.json();",
									"    pm.expect(jsonResponse.success).to.be.a(\"boolean\");",
									"    pm.expect(jsonResponse.success).to.eql(false);",
									"});",
									"",
									"pm.test(\"JSON response: message\", function () {",
									"    var jsonResponse = pm.response.json();",
									"    pm.expect(jsonResponse.message).to.be.a(\"string\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL_ENDPOINT}}/api/places/{{NOT_EXISTS}}",
							"host": [
								"{{URL_ENDPOINT}}"
							],
							"path": [
								"api",
								"places",
								"{{NOT_EXISTS}}"
							]
						}
					},
					"response": [
						{
							"name": "Delete place NOT FOUND",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL_ENDPOINT}}/api/places/{{NOT_EXISTS}}",
									"host": [
										"{{URL_ENDPOINT}}"
									],
									"path": [
										"api",
										"places",
										"{{NOT_EXISTS}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Wed, 28 Feb 2024 18:41:54 GMT"
								},
								{
									"key": "Server",
									"value": "Apache/2.4.52 (Ubuntu)"
								},
								{
									"key": "Vary",
									"value": "Authorization"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "60"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "57"
								},
								{
									"key": "phpdebugbar-id",
									"value": "X69d335d02035bc78eafd1f6073b0fb1d"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5, max=100"
								},
								{
									"key": "Connection",
									"value": "Keep-Alive"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"message\": \"Place not found\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "Visibilities",
			"item": [
				{
					"name": "List visibilities",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL_ENDPOINT}}/api/visibilities/",
							"host": [
								"{{URL_ENDPOINT}}"
							],
							"path": [
								"api",
								"visibilities",
								""
							]
						}
					},
					"response": [
						{
							"name": "List visibilities",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL_ENDPOINT}}/api/visibilities/",
									"host": [
										"{{URL_ENDPOINT}}"
									],
									"path": [
										"api",
										"visibilities",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Host",
									"value": "127.0.0.1:8000"
								},
								{
									"key": "Date",
									"value": "Thu, 08 Dec 2022 18:37:56 GMT"
								},
								{
									"key": "Date",
									"value": "Thu, 08 Dec 2022 18:37:56 GMT"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.1.11"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "60"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "59"
								},
								{
									"key": "phpdebugbar-id",
									"value": "Xbf57259611912ffb3442d6d9f344a4ec"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": [\n        {\n            \"id\": 1,\n            \"name\": \"public\"\n        },\n        {\n            \"id\": 2,\n            \"name\": \"contacts\"\n        },\n        {\n            \"id\": 3,\n            \"name\": \"private\"\n        }\n    ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "Pagination and filter",
			"item": [
				{
					"name": "List posts (query)",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL_ENDPOINT}}/api/posts?paginate=1&visibility=1",
							"host": [
								"{{URL_ENDPOINT}}"
							],
							"path": [
								"api",
								"posts"
							],
							"query": [
								{
									"key": "paginate",
									"value": "1"
								},
								{
									"key": "visibility",
									"value": "1"
								}
							]
						}
					},
					"response": [
						{
							"name": "List posts (query)",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL_ENDPOINT}}/api/posts?paginate=1&body=hola&visibility=1",
									"host": [
										"{{URL_ENDPOINT}}"
									],
									"path": [
										"api",
										"posts"
									],
									"query": [
										{
											"key": "paginate",
											"value": "1"
										},
										{
											"key": "body",
											"value": "hola"
										},
										{
											"key": "visibility",
											"value": "1"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Host",
									"value": "127.0.0.1:8000"
								},
								{
									"key": "Date",
									"value": "Mon, 06 Feb 2023 16:53:28 GMT"
								},
								{
									"key": "Date",
									"value": "Mon, 06 Feb 2023 16:53:27 GMT"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.2.1"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "60"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "54"
								},
								{
									"key": "phpdebugbar-id",
									"value": "Xceae696222897b8f3d6729401b42525b"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"data\": {\n        \"collection\": [\n            {\n                \"id\": 1,\n                \"body\": \"Holaaaaaaaaaa\",\n                \"file\": {\n                    \"id\": 5,\n                    \"filepath\": \"uploads/1675702156_Captura de pantalla de 2023-01-24 19-07-33.png\",\n                    \"filesize\": 68124,\n                    \"created_at\": \"2023-02-06T16:49:16.000000Z\",\n                    \"updated_at\": \"2023-02-06T16:49:16.000000Z\"\n                },\n                \"latitude\": 1.887,\n                \"longitude\": 0.444,\n                \"visibility\": {\n                    \"id\": 1,\n                    \"name\": \"public\"\n                },\n                \"author\": {\n                    \"id\": 3,\n                    \"name\": \"test_1675701605\",\n                    \"email\": \"test_1675701605@xtec.cat\",\n                    \"created_at\": \"2023-02-06T16:40:06.000000Z\",\n                    \"updated_at\": \"2023-02-06T16:40:06.000000Z\"\n                },\n                \"created_at\": \"2023-02-06T16:49:16.000000Z\",\n                \"updated_at\": \"2023-02-06T16:49:16.000000Z\",\n                \"likes_count\": 0,\n                \"comments_count\": 0\n            },\n            {\n                \"id\": 4,\n                \"body\": \"Hola caracola\",\n                \"file\": {\n                    \"id\": 8,\n                    \"filepath\": \"uploads/1675702399_Captura de pantalla de 2023-01-24 19-07-33.png\",\n                    \"filesize\": 68124,\n                    \"created_at\": \"2023-02-06T16:53:19.000000Z\",\n                    \"updated_at\": \"2023-02-06T16:53:19.000000Z\"\n                },\n                \"latitude\": 1.887,\n                \"longitude\": 0.444,\n                \"visibility\": {\n                    \"id\": 1,\n                    \"name\": \"public\"\n                },\n                \"author\": {\n                    \"id\": 3,\n                    \"name\": \"test_1675701605\",\n                    \"email\": \"test_1675701605@xtec.cat\",\n                    \"created_at\": \"2023-02-06T16:40:06.000000Z\",\n                    \"updated_at\": \"2023-02-06T16:40:06.000000Z\"\n                },\n                \"created_at\": \"2023-02-06T16:53:19.000000Z\",\n                \"updated_at\": \"2023-02-06T16:53:19.000000Z\",\n                \"likes_count\": 0,\n                \"comments_count\": 0\n            }\n        ],\n        \"links\": [\n            {\n                \"url\": null,\n                \"label\": \"&laquo; Previous\",\n                \"active\": false\n            },\n            {\n                \"url\": \"http://127.0.0.1:8000/api/posts?page=1\",\n                \"label\": \"1\",\n                \"active\": true\n            },\n            {\n                \"url\": null,\n                \"label\": \"Next &raquo;\",\n                \"active\": false\n            }\n        ],\n        \"meta\": {\n            \"current_page\": 1,\n            \"last_page\": 1,\n            \"per_page\": 15,\n            \"from\": 1,\n            \"to\": 2,\n            \"total\": 2,\n            \"path\": \"http://127.0.0.1:8000/api/posts\"\n        }\n    }\n}"
						}
					]
				},
				{
					"name": "List comments (query)",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL_ENDPOINT}}/api/posts/{{post}}/comments?paginate=1&page=2",
							"host": [
								"{{URL_ENDPOINT}}"
							],
							"path": [
								"api",
								"posts",
								"{{post}}",
								"comments"
							],
							"query": [
								{
									"key": "paginate",
									"value": "1"
								},
								{
									"key": "page",
									"value": "2"
								}
							]
						}
					},
					"response": [
						{
							"name": "List comments (query)",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL_ENDPOINT}}/api/posts/{{post}}/comments?paginate=1&page=2",
									"host": [
										"{{URL_ENDPOINT}}"
									],
									"path": [
										"api",
										"posts",
										"{{post}}",
										"comments"
									],
									"query": [
										{
											"key": "paginate",
											"value": "1"
										},
										{
											"key": "page",
											"value": "2"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Wed, 28 Feb 2024 12:37:06 GMT"
								},
								{
									"key": "Server",
									"value": "Apache/2.4.52 (Ubuntu)"
								},
								{
									"key": "Vary",
									"value": "Authorization"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "60"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "58"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5, max=100"
								},
								{
									"key": "Connection",
									"value": "Keep-Alive"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"data\": {\n        \"collection\": [],\n        \"links\": [\n            {\n                \"url\": \"https://backend.insjoaquimmir.cat/api/posts/20/comments?page=1\",\n                \"label\": \"&laquo; Previous\",\n                \"active\": false\n            },\n            {\n                \"url\": \"https://backend.insjoaquimmir.cat/api/posts/20/comments?page=1\",\n                \"label\": \"1\",\n                \"active\": false\n            },\n            {\n                \"url\": null,\n                \"label\": \"Next &raquo;\",\n                \"active\": false\n            }\n        ],\n        \"meta\": {\n            \"current_page\": 2,\n            \"last_page\": 1,\n            \"per_page\": 15,\n            \"from\": null,\n            \"to\": null,\n            \"total\": 1,\n            \"path\": \"https://backend.insjoaquimmir.cat/api/posts/20/comments\"\n        }\n    }\n}"
						}
					]
				},
				{
					"name": "List places (query)",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL_ENDPOINT}}/api/places?name=beatiful&description=nice&visibility=1",
							"host": [
								"{{URL_ENDPOINT}}"
							],
							"path": [
								"api",
								"places"
							],
							"query": [
								{
									"key": "name",
									"value": "beatiful"
								},
								{
									"key": "description",
									"value": "nice"
								},
								{
									"key": "visibility",
									"value": "1"
								}
							]
						}
					},
					"response": [
						{
							"name": "List places (query)",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "http://127.0.0.1:8000/api/places?name=beatiful&description=nice&visibility=1",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"places"
									],
									"query": [
										{
											"key": "name",
											"value": "beatiful"
										},
										{
											"key": "description",
											"value": "nice"
										},
										{
											"key": "visibility",
											"value": "1"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Host",
									"value": "127.0.0.1:8000"
								},
								{
									"key": "Date",
									"value": "Mon, 06 Feb 2023 17:13:13 GMT"
								},
								{
									"key": "Date",
									"value": "Mon, 06 Feb 2023 17:13:12 GMT"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.2.1"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "60"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "57"
								},
								{
									"key": "phpdebugbar-id",
									"value": "Xbebb11776a1ff52efd00cb90003de004"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"data\": [\n        {\n            \"id\": 1,\n            \"name\": \"My beatiful place\",\n            \"description\": \"Ohhhhhhh. Nice place.\",\n            \"file\": {\n                \"id\": 1,\n                \"filepath\": \"uploads/1675701718_Captura de pantalla de 2023-02-02 17-54-58.png\",\n                \"filesize\": 70460,\n                \"created_at\": \"2023-02-06T16:41:58.000000Z\",\n                \"updated_at\": \"2023-02-06T16:41:58.000000Z\"\n            },\n            \"latitude\": 1.887,\n            \"longitude\": 0.444,\n            \"visibility\": {\n                \"id\": 1,\n                \"name\": \"public\"\n            },\n            \"author\": {\n                \"id\": 3,\n                \"name\": \"test_1675701605\",\n                \"email\": \"test_1675701605@xtec.cat\",\n                \"created_at\": \"2023-02-06T16:40:06.000000Z\",\n                \"updated_at\": \"2023-02-06T16:40:06.000000Z\"\n            },\n            \"created_at\": \"2023-02-06T16:41:58.000000Z\",\n            \"updated_at\": \"2023-02-06T16:41:58.000000Z\",\n            \"favorites_count\": 0,\n            \"reviews_count\": 0\n        },\n        {\n            \"id\": 2,\n            \"name\": \"My beatiful place\",\n            \"description\": \"Ohhhhhhh. Nice place.\",\n            \"file\": {\n                \"id\": 2,\n                \"filepath\": \"uploads/1675701723_Captura de pantalla de 2023-02-02 17-54-58.png\",\n                \"filesize\": 70460,\n                \"created_at\": \"2023-02-06T16:42:03.000000Z\",\n                \"updated_at\": \"2023-02-06T16:42:03.000000Z\"\n            },\n            \"latitude\": 1.887,\n            \"longitude\": 0.444,\n            \"visibility\": {\n                \"id\": 1,\n                \"name\": \"public\"\n            },\n            \"author\": {\n                \"id\": 3,\n                \"name\": \"test_1675701605\",\n                \"email\": \"test_1675701605@xtec.cat\",\n                \"created_at\": \"2023-02-06T16:40:06.000000Z\",\n                \"updated_at\": \"2023-02-06T16:40:06.000000Z\"\n            },\n            \"created_at\": \"2023-02-06T16:42:03.000000Z\",\n            \"updated_at\": \"2023-02-06T16:42:03.000000Z\",\n            \"favorites_count\": 0,\n            \"reviews_count\": 0\n        },\n        {\n            \"id\": 4,\n            \"name\": \"My beatiful place\",\n            \"description\": \"Ohhhhhhh. Nice place.\",\n            \"file\": {\n                \"id\": 4,\n                \"filepath\": \"uploads/1675701767_Captura de pantalla de 2023-02-02 17-54-58.png\",\n                \"filesize\": 70460,\n                \"created_at\": \"2023-02-06T16:42:47.000000Z\",\n                \"updated_at\": \"2023-02-06T16:42:47.000000Z\"\n            },\n            \"latitude\": 1.887,\n            \"longitude\": 0.444,\n            \"visibility\": {\n                \"id\": 1,\n                \"name\": \"public\"\n            },\n            \"author\": {\n                \"id\": 3,\n                \"name\": \"test_1675701605\",\n                \"email\": \"test_1675701605@xtec.cat\",\n                \"created_at\": \"2023-02-06T16:40:06.000000Z\",\n                \"updated_at\": \"2023-02-06T16:40:06.000000Z\"\n            },\n            \"created_at\": \"2023-02-06T16:42:47.000000Z\",\n            \"updated_at\": \"2023-02-06T16:42:47.000000Z\",\n            \"favorites_count\": 0,\n            \"reviews_count\": 0\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "List reviews (query)",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL_ENDPOINT}}/api/places/{{place}}/reviews?paginate=1",
							"host": [
								"{{URL_ENDPOINT}}"
							],
							"path": [
								"api",
								"places",
								"{{place}}",
								"reviews"
							],
							"query": [
								{
									"key": "paginate",
									"value": "1"
								}
							]
						}
					},
					"response": [
						{
							"name": "List reviews",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL_ENDPOINT}}/api/places/{{place}}/reviews/",
									"host": [
										"{{URL_ENDPOINT}}"
									],
									"path": [
										"api",
										"places",
										"{{place}}",
										"reviews",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Host",
									"value": "127.0.0.1:8000"
								},
								{
									"key": "Date",
									"value": "Sat, 10 Dec 2022 19:26:01 GMT"
								},
								{
									"key": "Date",
									"value": "Sat, 10 Dec 2022 19:26:01 GMT"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.1.11"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "60"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "58"
								},
								{
									"key": "phpdebugbar-id",
									"value": "X5b61ef5fb5074b4b4497f2ee6938ab0e"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": [\n        {\n            \"id\": 4,\n            \"review\": \"This place is awesome!\",\n            \"place\": {\n                \"id\": 2,\n                \"name\": \"My beatiful place\",\n                \"description\": \"Ohhhhhhh. Nice place.\",\n                \"file\": {\n                    \"id\": 7,\n                    \"filepath\": \"uploads/1670439559_15m-love.png\",\n                    \"filesize\": 271691,\n                    \"created_at\": \"2022-12-07T18:59:19.000000Z\",\n                    \"updated_at\": \"2022-12-07T18:59:19.000000Z\"\n                },\n                \"latitude\": 1.887,\n                \"longitude\": 0.444,\n                \"visibility\": {\n                    \"id\": 1,\n                    \"name\": \"public\"\n                },\n                \"author\": {\n                    \"id\": 171,\n                    \"name\": \"test_1670425495\",\n                    \"email\": \"test_1670425495@xtec.cat\",\n                    \"created_at\": \"2022-12-07T15:04:55.000000Z\",\n                    \"updated_at\": \"2022-12-07T15:04:55.000000Z\"\n                },\n                \"created_at\": \"2022-12-07T18:59:19.000000Z\",\n                \"updated_at\": \"2022-12-07T18:59:19.000000Z\",\n                \"favorites_count\": null\n            },\n            \"user\": {\n                \"id\": 173,\n                \"name\": \"pep.jimenez\",\n                \"email\": \"pep.jimenez@insjoaquimmir.cat\",\n                \"created_at\": \"2022-12-07T16:14:39.000000Z\",\n                \"updated_at\": \"2022-12-07T16:14:39.000000Z\"\n            },\n            \"created_at\": \"2022-12-10T19:20:20.000000Z\",\n            \"updated_at\": \"2022-12-10T19:20:20.000000Z\"\n        }\n    ],\n    \"links\": {\n        \"first\": \"http://127.0.0.1:8000/api/places/2/reviews?page=1\",\n        \"last\": \"http://127.0.0.1:8000/api/places/2/reviews?page=1\",\n        \"prev\": null,\n        \"next\": null\n    },\n    \"meta\": {\n        \"current_page\": 1,\n        \"from\": 1,\n        \"last_page\": 1,\n        \"links\": [\n            {\n                \"url\": null,\n                \"label\": \"&laquo; Previous\",\n                \"active\": false\n            },\n            {\n                \"url\": \"http://127.0.0.1:8000/api/places/2/reviews?page=1\",\n                \"label\": \"1\",\n                \"active\": true\n            },\n            {\n                \"url\": null,\n                \"label\": \"Next &raquo;\",\n                \"active\": false\n            }\n        ],\n        \"path\": \"http://127.0.0.1:8000/api/places/2/reviews\",\n        \"per_page\": 15,\n        \"to\": 1,\n        \"total\": 1\n    }\n}"
						}
					]
				}
			]
		},
		{
			"name": "Logout",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status OK\", function () {",
							"    pm.response.to.be.ok;",
							"})",
							"",
							"pm.test(\"JSON response\", function () {",
							"    pm.response.to.be.json;",
							"    pm.response.to.be.an(\"object\");",
							"    pm.response.to.have.jsonBody(\"success\");",
							"    pm.response.to.have.jsonBody(\"message\");",
							"});",
							"",
							"pm.test(\"JSON response: success\", function () {",
							"    var jsonResponse = pm.response.json();",
							"    pm.expect(jsonResponse.success).to.be.a(\"boolean\");",
							"    pm.expect(jsonResponse.success).to.eql(true);",
							"});",
							"",
							"pm.test(\"JSON response: message\", function () {",
							"    var jsonResponse = pm.response.json();",
							"    pm.expect(jsonResponse.message).to.be.a(\"string\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{URL_ENDPOINT}}/api/logout",
					"host": [
						"{{URL_ENDPOINT}}"
					],
					"path": [
						"api",
						"logout"
					]
				}
			},
			"response": [
				{
					"name": "Logout",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL_ENDPOINT}}/api/logout",
							"host": [
								"{{URL_ENDPOINT}}"
							],
							"path": [
								"api",
								"logout"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Host",
							"value": "127.0.0.1:8000"
						},
						{
							"key": "Date",
							"value": "Thu, 08 Dec 2022 18:59:05 GMT"
						},
						{
							"key": "Date",
							"value": "Thu, 08 Dec 2022 18:59:05 GMT"
						},
						{
							"key": "Connection",
							"value": "close"
						},
						{
							"key": "X-Powered-By",
							"value": "PHP/8.1.11"
						},
						{
							"key": "Cache-Control",
							"value": "no-cache, private"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "X-RateLimit-Limit",
							"value": "60"
						},
						{
							"key": "X-RateLimit-Remaining",
							"value": "58"
						},
						{
							"key": "phpdebugbar-id",
							"value": "X19dc8d0ee79d630f1291b718ff92f5b7"
						},
						{
							"key": "Access-Control-Allow-Origin",
							"value": "*"
						}
					],
					"cookie": [],
					"body": "{\n    \"success\": true,\n    \"message\": \"Current token revoked\"\n}"
				}
			]
		},
		{
			"name": "Logout UNAUTHENTICATED",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status Unauthorized\", function () {",
							"    pm.response.to.be.unauthorized;",
							"})",
							"",
							"pm.test(\"JSON response\", function () {",
							"    pm.response.to.be.json;",
							"    pm.response.to.be.an(\"object\");",
							"    pm.response.to.have.jsonBody(\"message\");",
							"});",
							"",
							"pm.test(\"JSON response: message\", function () {",
							"    var jsonResponse = pm.response.json();",
							"    pm.expect(jsonResponse.message).to.be.a(\"string\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{URL_ENDPOINT}}/api/logout",
					"host": [
						"{{URL_ENDPOINT}}"
					],
					"path": [
						"api",
						"logout"
					]
				}
			},
			"response": [
				{
					"name": "Logout UNAUTHENTICATED",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL_ENDPOINT}}/api/logout",
							"host": [
								"{{URL_ENDPOINT}}"
							],
							"path": [
								"api",
								"logout"
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Date",
							"value": "Wed, 28 Feb 2024 12:49:50 GMT"
						},
						{
							"key": "Server",
							"value": "Apache/2.4.52 (Ubuntu)"
						},
						{
							"key": "Vary",
							"value": "Authorization"
						},
						{
							"key": "Cache-Control",
							"value": "no-cache, private"
						},
						{
							"key": "Access-Control-Allow-Origin",
							"value": "*"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5, max=100"
						},
						{
							"key": "Connection",
							"value": "Keep-Alive"
						},
						{
							"key": "Transfer-Encoding",
							"value": "chunked"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n    \"message\": \"Unauthenticated.\"\n}"
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "token",
			"value": "",
			"type": "string"
		},
		{
			"key": "file",
			"value": "1",
			"type": "string"
		},
		{
			"key": "post",
			"value": "1",
			"type": "string"
		},
		{
			"key": "place",
			"value": "1",
			"type": "string"
		},
		{
			"key": "comment",
			"value": "1",
			"type": "string"
		},
		{
			"key": "review",
			"value": "1",
			"type": "string"
		},
		{
			"key": "NOT_EXISTS",
			"value": "99999999999999999",
			"type": "string"
		}
	]
}